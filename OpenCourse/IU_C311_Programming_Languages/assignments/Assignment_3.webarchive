bplist00“_WebMainResource_WebSubresources’	
_WebResourceFrameName^WebResourceURL_WebResourceData_WebResourceMIMEType_WebResourceTextEncodingNameP_;https://cgi.soic.indiana.edu/~c311/doku.php?id=assignment-3O‡√<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr"><head>
  <meta name="google-site-verification" content="CHpL8-yKEGFx7Gy37uNcU2lz9oRZydQdifkiJNj6-P4">
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <title>
    C311/B521/A596 Programming Languages    [Assignment 3: Environments and Interpreters]
  </title>

  <meta name="generator" content="DokuWiki Release 2009-02-14b">
<meta name="robots" content="index,follow">
<meta name="date" content="2015-10-25T17:10:06-0400">
<meta name="keywords" content="assignment-3">
<link rel="search" type="application/opensearchdescription+xml" href="/~c311/lib/exe/opensearch.php" title="C311/B521/A596 Programming Languages">
<link rel="start" href="/~c311/">
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="/~c311/feed.php">
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="/~c311/feed.php?mode=list&amp;ns=">
<link rel="alternate" type="text/html" title="Plain HTML" href="/~c311/doku.php?do=export_xhtml&amp;id=assignment-3">
<link rel="stylesheet" media="all" type="text/css" href="/~c311/lib/exe/css.php?s=all&amp;t=doogiestpl">
<link rel="stylesheet" media="screen" type="text/css" href="/~c311/lib/exe/css.php?t=doogiestpl">
<link rel="stylesheet" media="print" type="text/css" href="/~c311/lib/exe/css.php?s=print&amp;t=doogiestpl">
<script type="text/javascript" charset="utf-8" src="/~c311/lib/exe/js.php?edit=0&amp;write=0"></script>

  <link rel="shortcut icon" href="/~c311/lib/tpl/doogiestpl/images/favicon.ico">

  </head>



<body>
<div class="dokuwiki">
  
  <div class="stylehead">

    <div class="header">
      <div class="header_left"></div>
      <div class="logo">
        <a href="/~c311/doku.php" name="dokuwiki__top" id="dokuwiki__top" accesskey="h" title="[ALT+H]">C311/B521/A596 Programming Languages</a>      </div>

      <div id="tabnavi" class="tabnavi">
	    <ul>
<li><a href="/~c311/doku.php?id=home">Home</a></li>
<li><a href="/~c311/doku.php?id=course-policies">Policies</a></li>
<li><a href="/~c311/doku.php?id=instructors">Instructors</a></li>
<li><a href="/~c311/doku.php?id=resources">Resources</a></li>
<li><a href="/~c311/doku.php?id=schedule">Schedule</a></li>
<li><a href="/~c311/doku.php?id=assignments">Assignments</a></li>
<li><a href="/~c311/doku.php?id=b621">B621</a></li>
</ul>
	  </div>
	  
	  <div class="clearer"></div>
      	</div>  
  </div>
    
  
   <div style="float: right;">
            <form class="button btn_login" method="get" action="/~c311/doku.php"><div class="no"><input type="hidden" name="do" value="login"><input type="hidden" name="sectok" value="3aec3f0f1ba1da2533e26bd3ea6c9ee4"><input type="hidden" name="id" value="assignment-3"><input type="submit" value="Login" class="button" title="Login"></div></form>       &nbsp;  &nbsp;  &nbsp;
   </div>
  <div class="clearer">&nbsp;</div>


  <div class="page">
    <!-- ......... wikipage start ......... -->
    


<h1><a name="assignment-3environments-and-interpreters" id="assignment-3environments-and-interpreters">Assignment 3: Environments and Interpreters</a></h1>
<div class="level1">

<blockquote cite="Alan Kay" class="blockquote-plugin">
<p>
It (the computer) is a medium that can dynamically simulate the details of any other medium, including media that cannot exist physically. It is not a tool, although it can act like many tools.

</p>

</blockquote>

</div>

<h2><a name="assignment" id="assignment">Assignment</a></h2>
<div class="level2">

</div>

<h5><a name="testing-your-homeworks" id="testing-your-homeworks">Testing your homeworks</a></h5>
<div class="level5">

<p>

We have provided a suite of test cases your interpreter must pass. To run these tests, you must download <a href="/~c311/lib/exe/fetch.php?media=a3-student-tests.rkt" class="media mediafile mf_rkt" title="a3-student-tests.rkt">a3-student-tests.rkt</a> test file, and do the following.
<!---
  1. Download and unzip the C311 course archive to a permanent location.
  2. In that location run &#039;&#039;raco link &lt;/path/to/C311/&gt;&#039;&#039;.
  3. Upon doing so, you should be able to, within Racket:
--->

</p>
<pre class="code lisp"><span class="sy0">&gt;</span> <span class="br0">(</span>require <span class="st0">"a3-student-tests.rkt"</span><span class="br0">)</span>
<span class="sy0">&gt;</span> <span class="br0">(</span>test<span class="sy0">-</span>file #:<span class="me1">file</span><span class="sy0">-</span><span class="kw1">name</span> <span class="st0">"a3.rkt"</span><span class="br0">)</span>
...</pre>
<p>

and that should get you going. Of course, <strong>these tests are not exhaustive; you should add your own tests as well</strong>. 
</p>

</div>

<h3><a name="notes" id="notes">Notes</a></h3>
<div class="level3">

<p>

As you proceed on this assignment, you may find the following <a href="http://www.cs.indiana.edu/usr/local/www/classes/c311/a3/ri_interpreter.pdf" class="urlextern" title="http://www.cs.indiana.edu/usr/local/www/classes/c311/a3/ri_interpreter.pdf" rel="nofollow">Notes on representation independence</a> to be of use. 
</p>

</div>

<h3><a name="part-1interpreters-and-environments" id="part-1interpreters-and-environments">Part 1: Interpreters and Environments</a></h3>
<div class="level3">

<p>

In recent lectures, we've learned how to write an interpreter that
takes a Racket expression and returns the result of evaluating that
expression. We have also learned to make it representation independent
with respect to environments. In fact, we have written two different
representations for the helpers <code>extend-env</code>, <code>apply-env</code>, and
<code>empty-env</code>. In this assignment, we will implement <strong>four</strong>
interpreters. During Part 1, we will implement 3 interpreters: the
three interpreters presented in lecture, along with the two different
sets of environments helpers for the 2nd and 3rd interpreter. Part 2
implements a new interpreter for a language that you haven't seen
before. Place your code for <strong>all four interpreters</strong> in a file named
<code>a3.rkt</code> and submit it to Oncourse.

</p>
<ul>
<li class="level1"><div class="li"> <strong>You must define <em>two</em> sets of environment helpers: one that uses functional (higher-order) representation of environments, and one that uses data-structural representation of environments.</strong> Call the representation-dependent version <code>value-of</code>, the version with functional helpers <code>value-of-fn</code>, and the version with data-structural helpers <code>value-of-ds</code>. Your data structures should be the <strong>tagged list</strong> representation demonstrated in class. Notice these names may be different from those presented in lecture. This is a framework for how you should name your procedures and helpers:</div>
</li>
</ul>
<pre class="code lisp"><span class="br0">(</span>define value<span class="sy0">-</span>of ...<span class="br0">)</span>
&nbsp;
<span class="br0">(</span>define value<span class="sy0">-</span>of<span class="sy0">-</span>fn ...<span class="br0">)</span>
<span class="br0">(</span>define empty<span class="sy0">-</span>env<span class="sy0">-</span>fn ...<span class="br0">)</span>
<span class="br0">(</span>define extend<span class="sy0">-</span>env<span class="sy0">-</span>fn ...<span class="br0">)</span>
<span class="br0">(</span>define apply<span class="sy0">-</span>env<span class="sy0">-</span>fn ...<span class="br0">)</span>
&nbsp;
<span class="br0">(</span>define value<span class="sy0">-</span>of<span class="sy0">-</span>ds ...<span class="br0">)</span>
<span class="br0">(</span>define empty<span class="sy0">-</span>env<span class="sy0">-</span>ds ...<span class="br0">)</span>
<span class="br0">(</span>define extend<span class="sy0">-</span>env<span class="sy0">-</span>ds ...<span class="br0">)</span>
<span class="br0">(</span>define apply<span class="sy0">-</span>env<span class="sy0">-</span>ds ...<span class="br0">)</span></pre><ul>
<li class="level1"><div class="li"> Your interpreter must handle the following forms: numbers, booleans, variables, lambda-abstraction, application, <code>zero?</code>, <code>sub1</code>, <code>*</code>, <code>if</code>, and <code>let</code>.</div>
</li>
<li class="level1"><div class="li"> Remember, your solutions should be compositional. </div>
</li>
<li class="level1"><div class="li"> You may have seen the expansion of <code>(let ([x e]) body)</code> as <code>(</code><code>(lambda (x) body) e)</code>.  However, when you have a handle on the environment, you can implement <code>let</code> in its own right. Therefore, you must not use <code>lambda</code> in this way for your interpreter's line for <code>let</code> expressions.</div>
</li>
<li class="level1"><div class="li"> As usual, brainteasers are required for 521 and H311 students.</div>
</li>
</ul>
<pre class="code lisp"><span class="sy0">&gt;</span> <span class="br0">(</span>value<span class="sy0">-</span>of
   '<span class="br0">(</span><span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>x<span class="br0">)</span> <span class="br0">(</span><span class="kw1">if</span> <span class="br0">(</span>zero? x<span class="br0">)</span>
                     #t
                     #f<span class="br0">)</span><span class="br0">)</span>
     0<span class="br0">)</span>
   <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>y<span class="br0">)</span> <span class="br0">(</span><span class="kw1">error</span> 'value<span class="sy0">-</span>of <span class="st0">"unbound variable ~s"</span> y<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
#t                  
<span class="sy0">&gt;</span> <span class="br0">(</span>value<span class="sy0">-</span>of 
   '<span class="br0">(</span><span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>x<span class="br0">)</span> <span class="br0">(</span><span class="kw1">if</span> <span class="br0">(</span>zero? x<span class="br0">)</span> 
                     <span class="nu0">12</span> 
                     <span class="nu0">47</span><span class="br0">)</span><span class="br0">)</span> 
     0<span class="br0">)</span> 
   <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>y<span class="br0">)</span> <span class="br0">(</span><span class="kw1">error</span> 'value<span class="sy0">-</span>of <span class="st0">"unbound variable ~s"</span> y<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
<span class="nu0">12</span>    
<span class="sy0">&gt;</span> <span class="br0">(</span>value<span class="sy0">-</span>of
   '<span class="br0">(</span><span class="kw1">let</span> <span class="br0">(</span><span class="br0">[</span>y <span class="br0">(</span><span class="sy0">*</span> <span class="nu0">3</span> <span class="nu0">4</span><span class="br0">)</span><span class="br0">]</span><span class="br0">)</span>
      <span class="br0">(</span><span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>x<span class="br0">)</span> <span class="br0">(</span><span class="sy0">*</span> x y<span class="br0">)</span><span class="br0">)</span> <span class="br0">(</span>sub1 <span class="nu0">6</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
   <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>y<span class="br0">)</span> <span class="br0">(</span><span class="kw1">error</span> 'value<span class="sy0">-</span>of <span class="st0">"unbound variable ~s"</span> y<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
<span class="nu0">60</span>
<span class="sy0">&gt;</span> <span class="br0">(</span>value<span class="sy0">-</span>of
   '<span class="br0">(</span><span class="kw1">let</span> <span class="br0">(</span><span class="br0">[</span>x <span class="br0">(</span><span class="sy0">*</span> <span class="nu0">2</span> <span class="nu0">3</span><span class="br0">)</span><span class="br0">]</span><span class="br0">)</span>
      <span class="br0">(</span><span class="kw1">let</span> <span class="br0">(</span><span class="br0">[</span>y <span class="br0">(</span>sub1 x<span class="br0">)</span><span class="br0">]</span><span class="br0">)</span>
        <span class="br0">(</span><span class="sy0">*</span> x y<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
   <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>y<span class="br0">)</span> <span class="br0">(</span><span class="kw1">error</span> 'value<span class="sy0">-</span>of <span class="st0">"unbound variable ~s"</span> y<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
<span class="nu0">30</span>
<span class="sy0">&gt;</span> <span class="br0">(</span>value<span class="sy0">-</span>of
   '<span class="br0">(</span><span class="kw1">let</span> <span class="br0">(</span><span class="br0">[</span>x <span class="br0">(</span><span class="sy0">*</span> <span class="nu0">2</span> <span class="nu0">3</span><span class="br0">)</span><span class="br0">]</span><span class="br0">)</span>
      <span class="br0">(</span><span class="kw1">let</span> <span class="br0">(</span><span class="br0">[</span>x <span class="br0">(</span>sub1 x<span class="br0">)</span><span class="br0">]</span><span class="br0">)</span>
        <span class="br0">(</span><span class="sy0">*</span> x x<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
   <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>y<span class="br0">)</span> <span class="br0">(</span><span class="kw1">error</span> 'value<span class="sy0">-</span>of <span class="st0">"unbound variable ~s"</span> y<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
<span class="nu0">25</span> 
<span class="sy0">&gt;</span> <span class="br0">(</span>value<span class="sy0">-</span>of 
   '<span class="br0">(</span><span class="kw1">let</span> <span class="br0">(</span><span class="br0">(</span><span class="sy0">!</span> <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>x<span class="br0">)</span> <span class="br0">(</span><span class="sy0">*</span> x x<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
      <span class="br0">(</span><span class="kw1">let</span> <span class="br0">(</span><span class="br0">(</span><span class="sy0">!</span> <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>n<span class="br0">)</span>
                 <span class="br0">(</span><span class="kw1">if</span> <span class="br0">(</span>zero? n<span class="br0">)</span> <span class="nu0">1</span> <span class="br0">(</span><span class="sy0">*</span> n <span class="br0">(</span><span class="sy0">!</span> <span class="br0">(</span>sub1 n<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
        <span class="br0">(</span><span class="sy0">!</span> <span class="nu0">5</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
   <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>y<span class="br0">)</span> <span class="br0">(</span><span class="kw1">error</span> 'value<span class="sy0">-</span>of <span class="st0">"unbound variable ~s"</span> y<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
<span class="nu0">80</span>
<span class="sy0">&gt;</span> <span class="br0">(</span>value<span class="sy0">-</span>of
   '<span class="br0">(</span><span class="br0">(</span><span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>f<span class="br0">)</span>
        <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>n<span class="br0">)</span> <span class="br0">(</span><span class="kw1">if</span> <span class="br0">(</span>zero? n<span class="br0">)</span> <span class="nu0">1</span> <span class="br0">(</span><span class="sy0">*</span> n <span class="br0">(</span><span class="br0">(</span>f f<span class="br0">)</span> <span class="br0">(</span>sub1 n<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
      <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>f<span class="br0">)</span>
        <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>n<span class="br0">)</span> <span class="br0">(</span><span class="kw1">if</span> <span class="br0">(</span>zero? n<span class="br0">)</span> <span class="nu0">1</span> <span class="br0">(</span><span class="sy0">*</span> n <span class="br0">(</span><span class="br0">(</span>f f<span class="br0">)</span> <span class="br0">(</span>sub1 n<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
     <span class="nu0">5</span><span class="br0">)</span>
   <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>y<span class="br0">)</span> <span class="br0">(</span><span class="kw1">error</span> 'value<span class="sy0">-</span>of <span class="st0">"unbound variable ~s"</span> y<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
<span class="nu0">120</span>
<span class="sy0">&gt;</span> <span class="br0">(</span>value<span class="sy0">-</span>of<span class="sy0">-</span>fn
   '<span class="br0">(</span><span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>x<span class="br0">)</span> <span class="br0">(</span><span class="kw1">if</span> <span class="br0">(</span>zero? x<span class="br0">)</span>
                     #t
                     #f<span class="br0">)</span><span class="br0">)</span>
     0<span class="br0">)</span>
   <span class="br0">(</span>empty<span class="sy0">-</span>env<span class="sy0">-</span>fn<span class="br0">)</span><span class="br0">)</span>
#t                  
<span class="sy0">&gt;</span> <span class="br0">(</span>value<span class="sy0">-</span>of<span class="sy0">-</span>fn 
   '<span class="br0">(</span><span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>x<span class="br0">)</span> <span class="br0">(</span><span class="kw1">if</span> <span class="br0">(</span>zero? x<span class="br0">)</span> 
                     <span class="nu0">12</span> 
                     <span class="nu0">47</span><span class="br0">)</span><span class="br0">)</span> 
     0<span class="br0">)</span> 
   <span class="br0">(</span>empty<span class="sy0">-</span>env<span class="sy0">-</span>fn<span class="br0">)</span><span class="br0">)</span>
<span class="nu0">12</span>    
<span class="sy0">&gt;</span> <span class="br0">(</span>value<span class="sy0">-</span>of<span class="sy0">-</span>fn
   '<span class="br0">(</span><span class="kw1">let</span> <span class="br0">(</span><span class="br0">[</span>y <span class="br0">(</span><span class="sy0">*</span> <span class="nu0">3</span> <span class="nu0">4</span><span class="br0">)</span><span class="br0">]</span><span class="br0">)</span>
      <span class="br0">(</span><span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>x<span class="br0">)</span> <span class="br0">(</span><span class="sy0">*</span> x y<span class="br0">)</span><span class="br0">)</span> <span class="br0">(</span>sub1 <span class="nu0">6</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
   <span class="br0">(</span>empty<span class="sy0">-</span>env<span class="sy0">-</span>fn<span class="br0">)</span><span class="br0">)</span>
<span class="nu0">60</span>
<span class="sy0">&gt;</span> <span class="br0">(</span>value<span class="sy0">-</span>of<span class="sy0">-</span>fn
   '<span class="br0">(</span><span class="kw1">let</span> <span class="br0">(</span><span class="br0">[</span>x <span class="br0">(</span><span class="sy0">*</span> <span class="nu0">2</span> <span class="nu0">3</span><span class="br0">)</span><span class="br0">]</span><span class="br0">)</span>
      <span class="br0">(</span><span class="kw1">let</span> <span class="br0">(</span><span class="br0">[</span>y <span class="br0">(</span>sub1 x<span class="br0">)</span><span class="br0">]</span><span class="br0">)</span>
        <span class="br0">(</span><span class="sy0">*</span> x y<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
   <span class="br0">(</span>empty<span class="sy0">-</span>env<span class="sy0">-</span>fn<span class="br0">)</span><span class="br0">)</span>
<span class="nu0">30</span>
<span class="sy0">&gt;</span> <span class="br0">(</span>value<span class="sy0">-</span>of<span class="sy0">-</span>fn
   '<span class="br0">(</span><span class="kw1">let</span> <span class="br0">(</span><span class="br0">[</span>x <span class="br0">(</span><span class="sy0">*</span> <span class="nu0">2</span> <span class="nu0">3</span><span class="br0">)</span><span class="br0">]</span><span class="br0">)</span>
      <span class="br0">(</span><span class="kw1">let</span> <span class="br0">(</span><span class="br0">[</span>x <span class="br0">(</span>sub1 x<span class="br0">)</span><span class="br0">]</span><span class="br0">)</span>
        <span class="br0">(</span><span class="sy0">*</span> x x<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
   <span class="br0">(</span>empty<span class="sy0">-</span>env<span class="sy0">-</span>fn<span class="br0">)</span><span class="br0">)</span>
<span class="nu0">25</span>
<span class="sy0">&gt;</span> <span class="br0">(</span>value<span class="sy0">-</span>of<span class="sy0">-</span>fn
   '<span class="br0">(</span><span class="br0">(</span><span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>f<span class="br0">)</span>
        <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>n<span class="br0">)</span> <span class="br0">(</span><span class="kw1">if</span> <span class="br0">(</span>zero? n<span class="br0">)</span> <span class="nu0">1</span> <span class="br0">(</span><span class="sy0">*</span> n <span class="br0">(</span><span class="br0">(</span>f f<span class="br0">)</span> <span class="br0">(</span>sub1 n<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
      <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>f<span class="br0">)</span>
        <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>n<span class="br0">)</span> <span class="br0">(</span><span class="kw1">if</span> <span class="br0">(</span>zero? n<span class="br0">)</span> <span class="nu0">1</span> <span class="br0">(</span><span class="sy0">*</span> n <span class="br0">(</span><span class="br0">(</span>f f<span class="br0">)</span> <span class="br0">(</span>sub1 n<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
     <span class="nu0">5</span><span class="br0">)</span>
   <span class="br0">(</span>empty<span class="sy0">-</span>env<span class="sy0">-</span>fn<span class="br0">)</span><span class="br0">)</span>
<span class="nu0">120</span>
<span class="sy0">&gt;</span> <span class="br0">(</span>value<span class="sy0">-</span>of<span class="sy0">-</span>ds
   '<span class="br0">(</span><span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>x<span class="br0">)</span> <span class="br0">(</span><span class="kw1">if</span> <span class="br0">(</span>zero? x<span class="br0">)</span>
                     #t
                     #f<span class="br0">)</span><span class="br0">)</span>
     0<span class="br0">)</span>
   <span class="br0">(</span>empty<span class="sy0">-</span>env<span class="sy0">-</span>ds<span class="br0">)</span><span class="br0">)</span>
#t                  
<span class="sy0">&gt;</span> <span class="br0">(</span>value<span class="sy0">-</span>of<span class="sy0">-</span>ds
   '<span class="br0">(</span><span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>x<span class="br0">)</span> <span class="br0">(</span><span class="kw1">if</span> <span class="br0">(</span>zero? x<span class="br0">)</span> 
                     <span class="nu0">12</span> 
                     <span class="nu0">47</span><span class="br0">)</span><span class="br0">)</span> 
     0<span class="br0">)</span> 
   <span class="br0">(</span>empty<span class="sy0">-</span>env<span class="sy0">-</span>ds<span class="br0">)</span><span class="br0">)</span>
<span class="nu0">12</span>    
<span class="sy0">&gt;</span> <span class="br0">(</span>value<span class="sy0">-</span>of<span class="sy0">-</span>ds
   '<span class="br0">(</span><span class="kw1">let</span> <span class="br0">(</span><span class="br0">[</span>y <span class="br0">(</span><span class="sy0">*</span> <span class="nu0">3</span> <span class="nu0">4</span><span class="br0">)</span><span class="br0">]</span><span class="br0">)</span>
      <span class="br0">(</span><span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>x<span class="br0">)</span> <span class="br0">(</span><span class="sy0">*</span> x y<span class="br0">)</span><span class="br0">)</span> <span class="br0">(</span>sub1 <span class="nu0">6</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
   <span class="br0">(</span>empty<span class="sy0">-</span>env<span class="sy0">-</span>ds<span class="br0">)</span><span class="br0">)</span>
<span class="nu0">60</span>
<span class="sy0">&gt;</span> <span class="br0">(</span>value<span class="sy0">-</span>of<span class="sy0">-</span>ds
   '<span class="br0">(</span><span class="kw1">let</span> <span class="br0">(</span><span class="br0">[</span>x <span class="br0">(</span><span class="sy0">*</span> <span class="nu0">2</span> <span class="nu0">3</span><span class="br0">)</span><span class="br0">]</span><span class="br0">)</span>
      <span class="br0">(</span><span class="kw1">let</span> <span class="br0">(</span><span class="br0">[</span>y <span class="br0">(</span>sub1 x<span class="br0">)</span><span class="br0">]</span><span class="br0">)</span>
        <span class="br0">(</span><span class="sy0">*</span> x y<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
   <span class="br0">(</span>empty<span class="sy0">-</span>env<span class="sy0">-</span>ds<span class="br0">)</span><span class="br0">)</span>
<span class="nu0">30</span>
<span class="sy0">&gt;</span> <span class="br0">(</span>value<span class="sy0">-</span>of<span class="sy0">-</span>ds
   '<span class="br0">(</span><span class="kw1">let</span> <span class="br0">(</span><span class="br0">[</span>x <span class="br0">(</span><span class="sy0">*</span> <span class="nu0">2</span> <span class="nu0">3</span><span class="br0">)</span><span class="br0">]</span><span class="br0">)</span>
      <span class="br0">(</span><span class="kw1">let</span> <span class="br0">(</span><span class="br0">[</span>x <span class="br0">(</span>sub1 x<span class="br0">)</span><span class="br0">]</span><span class="br0">)</span>
        <span class="br0">(</span><span class="sy0">*</span> x x<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
   <span class="br0">(</span>empty<span class="sy0">-</span>env<span class="sy0">-</span>ds<span class="br0">)</span><span class="br0">)</span>
<span class="nu0">25</span>
<span class="sy0">&gt;</span> <span class="br0">(</span>value<span class="sy0">-</span>of<span class="sy0">-</span>ds
   '<span class="br0">(</span><span class="br0">(</span><span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>f<span class="br0">)</span>
        <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>n<span class="br0">)</span> <span class="br0">(</span><span class="kw1">if</span> <span class="br0">(</span>zero? n<span class="br0">)</span> <span class="nu0">1</span> <span class="br0">(</span><span class="sy0">*</span> n <span class="br0">(</span><span class="br0">(</span>f f<span class="br0">)</span> <span class="br0">(</span>sub1 n<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
      <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>f<span class="br0">)</span>
        <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>n<span class="br0">)</span> <span class="br0">(</span><span class="kw1">if</span> <span class="br0">(</span>zero? n<span class="br0">)</span> <span class="nu0">1</span> <span class="br0">(</span><span class="sy0">*</span> n <span class="br0">(</span><span class="br0">(</span>f f<span class="br0">)</span> <span class="br0">(</span>sub1 n<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
     <span class="nu0">5</span><span class="br0">)</span>
   <span class="br0">(</span>empty<span class="sy0">-</span>env<span class="sy0">-</span>ds<span class="br0">)</span><span class="br0">)</span>
<span class="nu0">120</span></pre>
</div>

<h3><a name="part-2-fo-eulav" id="part-2-fo-eulav">Part 2 ''fo-eulav''</a></h3>
<div class="level3">

<p>

4. Having successfully completed the first part of the assignment, you are now well prepared to implement <code>fo-eulav</code>. Sample runs are provided below. Only forms present in those sample runs are required. 
</p>
<pre class="code lisp"><span class="sy0">&gt;</span> <span class="co1">;; Ppa</span>
<span class="br0">(</span>fo<span class="sy0">-</span>eulav '<span class="br0">(</span><span class="nu0">5</span> <span class="br0">(</span>x <span class="br0">(</span>x<span class="br0">)</span> adbmal<span class="br0">)</span><span class="br0">)</span> <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>y<span class="br0">)</span> <span class="br0">(</span><span class="kw1">error</span> 'fo<span class="sy0">-</span>eulav <span class="st0">"unbound variable ~s"</span> y<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
<span class="nu0">5</span>
<span class="sy0">&gt;</span> <span class="co1">;; Stnemugra sa Snoitcnuf </span>
<span class="br0">(</span>fo<span class="sy0">-</span>eulav '<span class="br0">(</span><span class="br0">(</span><span class="br0">(</span>x 1bus<span class="br0">)</span> <span class="br0">(</span>x<span class="br0">)</span> adbmal<span class="br0">)</span> <span class="br0">(</span><span class="br0">(</span><span class="nu0">5</span> f<span class="br0">)</span> <span class="br0">(</span>f<span class="br0">)</span> adbmal<span class="br0">)</span><span class="br0">)</span> <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>y<span class="br0">)</span> <span class="br0">(</span><span class="kw1">error</span> 'fo<span class="sy0">-</span>eulav <span class="st0">"unbound variable ~s"</span> y<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
<span class="nu0">4</span>
<span class="sy0">&gt;</span> <span class="co1">;; Tcaf</span>
<span class="br0">(</span>fo<span class="sy0">-</span>eulav   '<span class="br0">(</span><span class="nu0">5</span>
 <span class="br0">(</span><span class="br0">(</span><span class="br0">(</span><span class="br0">(</span><span class="br0">(</span><span class="br0">(</span><span class="br0">(</span>n 1bus<span class="br0">)</span> <span class="br0">(</span>f f<span class="br0">)</span><span class="br0">)</span> n <span class="sy0">*</span><span class="br0">)</span> <span class="nu0">1</span> <span class="br0">(</span>n ?orez<span class="br0">)</span> fi<span class="br0">)</span>
                                   <span class="br0">(</span>n<span class="br0">)</span> adbmal<span class="br0">)</span>
                                     <span class="br0">(</span>f<span class="br0">)</span> adbmal<span class="br0">)</span>
  <span class="br0">(</span><span class="br0">(</span><span class="br0">(</span><span class="br0">(</span><span class="br0">(</span><span class="br0">(</span>n 1bus<span class="br0">)</span> <span class="br0">(</span>f f<span class="br0">)</span><span class="br0">)</span> n <span class="sy0">*</span><span class="br0">)</span> <span class="nu0">1</span> <span class="br0">(</span>n ?orez<span class="br0">)</span> fi<span class="br0">)</span>
                                  <span class="br0">(</span>n<span class="br0">)</span> adbmal<span class="br0">)</span>
                                    <span class="br0">(</span>f<span class="br0">)</span> adbmal<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span> 
 <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>y<span class="br0">)</span> <span class="br0">(</span><span class="kw1">error</span> 'fo<span class="sy0">-</span>eulav <span class="st0">"unbound variable ~s"</span> y<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
<span class="nu0">120</span></pre>
<p>

<!--
==== Assignment Pt. 2 =====

As discussed in class, it is important to understand why pmatch works. Consider the following pmatch expression:

&lt;code lisp&gt;
(dmatch (list 1 2 3)
       [(,a ,b ,c) (+ a b c)])
&lt;/code&gt;

and its expansion:

&lt;code lisp&gt;
(let ([v (list 1 2 3)])
  (let ([fk (lambda () (error &#039;pmatch &quot;failed: ~s&quot; v))])
    (if (pair? v)
        (let ([vx (car v)] [vy (cdr v)])
          (let ([a vx])
            (if (pair? vy)
                (let ([vx (car vy)] [vy (cdr vy)])
                  (let ([b vx])
                    (if (pair? vy)
                        (let ([vx (car vy)] [vy (cdr vy)])
                          (let ([c vx])
                            (if (null? vy) (+ a b c) (fk))))
                        (fk))))
                (fk))))
        (fk))))
&lt;/code&gt;

Write a paragraph or so in a comment at the head of a3.scm and explain what, exactly, is going on here.
-->
</p>

</div>

<h2><a name="brainteasers" id="brainteasers">Brainteasers</a></h2>
<div class="level2">

<p>

5. Extend your interpreter <code>value-of</code> to support <code>set!</code> and <code>begin2</code>, where <code>begin2</code> is a variant of Racket's <code>begin</code> that takes exactly two arguments, and <code>set!</code> mutates variables. 
</p>
<pre class="code lisp"><span class="sy0">&gt;</span> <span class="br0">(</span>value<span class="sy0">-</span>of
    '<span class="br0">(</span><span class="sy0">*</span> <span class="br0">(</span>begin2 <span class="nu0">1</span> <span class="nu0">1</span><span class="br0">)</span> <span class="nu0">3</span><span class="br0">)</span>
    <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>y<span class="br0">)</span> <span class="br0">(</span><span class="kw1">error</span> 'value<span class="sy0">-</span>of <span class="st0">"unbound variable ~s"</span> y<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
<span class="nu0">3</span>
<span class="sy0">&gt;</span> <span class="br0">(</span>value<span class="sy0">-</span>of
    '<span class="br0">(</span><span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>a<span class="br0">)</span>
        <span class="br0">(</span><span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>p<span class="br0">)</span>
           <span class="br0">(</span>begin2
             <span class="br0">(</span>p a<span class="br0">)</span>
             a<span class="br0">)</span><span class="br0">)</span>
	 <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>x<span class="br0">)</span> <span class="br0">(</span><span class="kw1">set</span><span class="sy0">!</span> x <span class="nu0">4</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
      <span class="nu0">3</span><span class="br0">)</span>
     <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>y<span class="br0">)</span> <span class="br0">(</span><span class="kw1">error</span> 'value<span class="sy0">-</span>of <span class="st0">"unbound variable ~s"</span> y<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
<span class="nu0">3</span>
<span class="sy0">&gt;</span> <span class="br0">(</span>value<span class="sy0">-</span>of
   '<span class="br0">(</span><span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>f<span class="br0">)</span>
       <span class="br0">(</span><span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>g<span class="br0">)</span>
          <span class="br0">(</span><span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>z<span class="br0">)</span> <span class="br0">(</span>begin2
                        <span class="br0">(</span>g z<span class="br0">)</span>
                        z<span class="br0">)</span><span class="br0">)</span>
           <span class="nu0">55</span><span class="br0">)</span><span class="br0">)</span>
        <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>y<span class="br0">)</span> <span class="br0">(</span>f y<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span> <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>x<span class="br0">)</span> <span class="br0">(</span><span class="kw1">set</span><span class="sy0">!</span> x <span class="nu0">44</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
   <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>y<span class="br0">)</span> <span class="br0">(</span><span class="kw1">error</span> 'value<span class="sy0">-</span>of <span class="st0">"unbound variable ~s"</span> y<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
<span class="nu0">55</span>
<span class="sy0">&gt;</span> <span class="br0">(</span>value<span class="sy0">-</span>of
    '<span class="br0">(</span><span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>x<span class="br0">)</span>
        <span class="br0">(</span>begin2 <span class="br0">(</span><span class="kw1">set</span><span class="sy0">!</span> x <span class="nu0">5</span><span class="br0">)</span> x<span class="br0">)</span><span class="br0">)</span>
      <span class="nu0">6</span><span class="br0">)</span>
    <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>y<span class="br0">)</span> <span class="br0">(</span><span class="kw1">error</span> 'value<span class="sy0">-</span>of <span class="st0">"unbound variable ~s"</span> y<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
<span class="nu0">5</span>
<span class="sy0">&gt;</span> <span class="br0">(</span>value<span class="sy0">-</span>of 
    '<span class="br0">(</span><span class="kw1">let</span> <span class="br0">(</span><span class="br0">(</span>a <span class="nu0">3</span><span class="br0">)</span><span class="br0">)</span> 
        <span class="br0">(</span>begin2 <span class="br0">(</span>begin2 a <span class="br0">(</span><span class="kw1">set</span><span class="sy0">!</span> a <span class="nu0">4</span><span class="br0">)</span><span class="br0">)</span> a<span class="br0">)</span><span class="br0">)</span>
    <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>y<span class="br0">)</span> <span class="br0">(</span><span class="kw1">error</span> 'value<span class="sy0">-</span>of <span class="st0">"unbound variable ~s"</span> y<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
<span class="nu0">4</span>
<span class="sy0">&gt;</span> <span class="br0">(</span>value<span class="sy0">-</span>of 
    '<span class="br0">(</span><span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>x<span class="br0">)</span>
        <span class="br0">(</span>begin2
          <span class="br0">(</span><span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>y<span class="br0">)</span>
	     <span class="br0">(</span>begin2
	       <span class="br0">(</span><span class="kw1">set</span><span class="sy0">!</span> x 0<span class="br0">)</span>
	       <span class="nu0">98</span><span class="br0">)</span><span class="br0">)</span>
           <span class="nu0">99</span><span class="br0">)</span>
          x<span class="br0">)</span><span class="br0">)</span>
      <span class="nu0">97</span><span class="br0">)</span>
    <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>y<span class="br0">)</span> <span class="br0">(</span><span class="kw1">error</span> 'value<span class="sy0">-</span>of <span class="st0">"unbound variable ~s"</span> y<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
0
<span class="sy0">&gt;</span> <span class="br0">(</span>value<span class="sy0">-</span>of 
    '<span class="br0">(</span><span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>y<span class="br0">)</span>
        <span class="br0">(</span><span class="kw1">let</span> <span class="br0">(</span><span class="br0">(</span>x <span class="br0">(</span>begin2
                   <span class="br0">(</span><span class="kw1">set</span><span class="sy0">!</span> y <span class="nu0">7</span><span class="br0">)</span>
                   <span class="nu0">8</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
          <span class="br0">(</span>begin2
            <span class="br0">(</span><span class="kw1">set</span><span class="sy0">!</span> y <span class="nu0">3</span><span class="br0">)</span>
              <span class="br0">(</span><span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>z<span class="br0">)</span> y<span class="br0">)</span>
               x<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
      <span class="nu0">4</span><span class="br0">)</span>
    <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>y<span class="br0">)</span> <span class="br0">(</span><span class="kw1">error</span> 'value<span class="sy0">-</span>of <span class="st0">"unbound variable ~s"</span> y<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
<span class="nu0">3</span>
<span class="sy0">&gt;</span> <span class="br0">(</span>value<span class="sy0">-</span>of 
    '<span class="br0">(</span><span class="kw1">let</span> <span class="br0">(</span><span class="br0">(</span>a <span class="nu0">5</span><span class="br0">)</span><span class="br0">)</span>
       <span class="br0">(</span><span class="kw1">let</span> <span class="br0">(</span><span class="br0">(</span>y <span class="br0">(</span>begin2 <span class="br0">(</span><span class="kw1">set</span><span class="sy0">!</span> a <span class="br0">(</span>sub1 a<span class="br0">)</span><span class="br0">)</span> <span class="nu0">6</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
         <span class="br0">(</span>begin2
           <span class="br0">(</span><span class="sy0">*</span> y y<span class="br0">)</span>
           a<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
    <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>y<span class="br0">)</span> <span class="br0">(</span><span class="kw1">error</span> 'value<span class="sy0">-</span>of <span class="st0">"unbound variable ~s"</span> y<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
<span class="nu0">4</span></pre>
<p>
6. Consider the following interpreter for a deBruijnized version of the lambda-calculus (i.e. lambda-calculus expressions using lexical addresses instead of variables). Notice this interpreter is representation-independent with respect to environments. 
</p>
<pre class="code lisp"><span class="br0">(</span>define value<span class="sy0">-</span>of<span class="sy0">-</span>lex
  <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span><span class="kw1">exp</span> env<span class="br0">)</span>
    <span class="br0">(</span>match <span class="kw1">exp</span>
      <span class="br0">(</span>`,b #:<span class="me1">when</span> <span class="br0">(</span>boolean? b<span class="br0">)</span> <span class="kw1">exp</span><span class="br0">)</span>
      <span class="br0">(</span>`,n #:<span class="me1">when</span> <span class="br0">(</span>number? n<span class="br0">)</span> <span class="kw1">exp</span><span class="br0">)</span>
      <span class="br0">(</span>`<span class="br0">(</span>sub1 ,body<span class="br0">)</span> <span class="br0">(</span>sub1 <span class="br0">(</span>value<span class="sy0">-</span>of<span class="sy0">-</span>lex body env<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
      <span class="br0">(</span>`<span class="br0">(</span>zero? ,body<span class="br0">)</span> <span class="br0">(</span>zero? <span class="br0">(</span>value<span class="sy0">-</span>of<span class="sy0">-</span>lex body env<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
      <span class="br0">(</span>`<span class="br0">(</span><span class="sy0">*</span> ,n1 ,n2<span class="br0">)</span> <span class="br0">(</span><span class="sy0">*</span> <span class="br0">(</span>value<span class="sy0">-</span>of<span class="sy0">-</span>lex n1 env<span class="br0">)</span> <span class="br0">(</span>value<span class="sy0">-</span>of<span class="sy0">-</span>lex n2 env<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
      <span class="br0">(</span>`<span class="br0">(</span><span class="kw1">if</span> ,t ,c ,a<span class="br0">)</span> <span class="br0">(</span><span class="kw1">if</span> <span class="br0">(</span>value<span class="sy0">-</span>of<span class="sy0">-</span>lex t env<span class="br0">)</span> <span class="br0">(</span>value<span class="sy0">-</span>of<span class="sy0">-</span>lex c env<span class="br0">)</span> <span class="br0">(</span>value<span class="sy0">-</span>of<span class="sy0">-</span>lex a env<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
      <span class="br0">(</span>`<span class="br0">(</span>var ,num<span class="br0">)</span> <span class="br0">(</span>apply<span class="sy0">-</span>env<span class="sy0">-</span>lex env num<span class="br0">)</span><span class="br0">)</span>
      <span class="br0">(</span>`<span class="br0">(</span><span class="kw1">lambda</span> ,body<span class="br0">)</span> <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>a<span class="br0">)</span> <span class="br0">(</span>value<span class="sy0">-</span>of<span class="sy0">-</span>lex body <span class="br0">(</span>extend<span class="sy0">-</span>env<span class="sy0">-</span>lex a env<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
      <span class="br0">(</span>`<span class="br0">(</span>,rator ,rand<span class="br0">)</span> <span class="br0">(</span><span class="br0">(</span>value<span class="sy0">-</span>of<span class="sy0">-</span>lex rator env<span class="br0">)</span> <span class="br0">(</span>value<span class="sy0">-</span>of<span class="sy0">-</span>lex rand env<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
&nbsp;
<span class="br0">(</span>define empty<span class="sy0">-</span>env<span class="sy0">-</span>lex 
  <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span><span class="br0">)</span> '<span class="br0">(</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span></pre>
<p>
From the following call one can see we're using a data-structure representation of environments.
</p>
<pre class="code lisp"><span class="sy0">&gt;</span> <span class="br0">(</span>value<span class="sy0">-</span>of<span class="sy0">-</span>lex '<span class="br0">(</span><span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>var 0<span class="br0">)</span><span class="br0">)</span> <span class="nu0">5</span><span class="br0">)</span> <span class="br0">(</span>empty<span class="sy0">-</span>env<span class="sy0">-</span>lex<span class="br0">)</span><span class="br0">)</span>
<span class="nu0">5</span></pre>
<p>
Define <code>apply-env-lex</code> and <code>extend-env-lex</code>. Your definitions should be short; in fact, they <strong>should not use <code>lambda</code></strong>. As ever, you are not required to handle bad data.
</p>

</div>

<h2><a name="just-dessert" id="just-dessert">Just Dessert</a></h2>
<div class="level2">

<p>

7. The lambda calculus can be used to define a representation of natural numbers, called Church numerals, and arithmetic over them. For instance, <code>c5</code> is the definition of the Church numeral for 5. 
</p>
<pre class="code lisp"><span class="sy0">&gt;</span> <span class="br0">(</span>define c0 <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>f<span class="br0">)</span> <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>x<span class="br0">)</span> x<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
<span class="sy0">&gt;</span> <span class="br0">(</span>define c5 <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>f<span class="br0">)</span> <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>x<span class="br0">)</span> <span class="br0">(</span>f <span class="br0">(</span>f <span class="br0">(</span>f <span class="br0">(</span>f <span class="br0">(</span>f x<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
<span class="sy0">&gt;</span> <span class="br0">(</span><span class="br0">(</span>c5 add1<span class="br0">)</span> 0<span class="br0">)</span>
<span class="nu0">5</span>
<span class="sy0">&gt;</span> <span class="br0">(</span><span class="br0">(</span>c0 add1<span class="br0">)</span> 0<span class="br0">)</span>
0</pre>
<p>
The following is a definition for Church plus, which performs addition over Church numerals. 
</p>
<pre class="code lisp"><span class="sy0">&gt;</span> <span class="br0">(</span>define c<span class="sy0">+</span> <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>m<span class="br0">)</span> 
               <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>n<span class="br0">)</span> 
                 <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>a<span class="br0">)</span> <span class="br0">(</span><span class="kw1">lambda</span> <span class="br0">(</span>b<span class="br0">)</span> <span class="br0">(</span><span class="br0">(</span>m a<span class="br0">)</span> <span class="br0">(</span><span class="br0">(</span>n a<span class="br0">)</span> b<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
<span class="sy0">&gt;</span> <span class="br0">(</span><span class="kw1">let</span> <span class="br0">(</span><span class="br0">(</span>c10 <span class="br0">(</span><span class="br0">(</span>c<span class="sy0">+</span> c5<span class="br0">)</span> c5<span class="br0">)</span><span class="br0">)</span><span class="br0">)</span>
    <span class="br0">(</span><span class="br0">(</span>c10 add1<span class="br0">)</span> 0<span class="br0">)</span><span class="br0">)</span>
<span class="nu0">10</span></pre>
<p>
One way to understand the definition of <code>c+</code> is that it, when provided two Church numerals, returns a function that, when provided a meaning for add1 and a meaning for zero, uses provides to <code>m</code> the meaning for add1 and, instead of the meaning for zero, provides it the meaning for its second argument. <code>m</code> is the sort of thing that will count up m times, so the result is the meaning of m + n. 
</p>

<p>
Your task, however, is to implement <code>csub1</code>, Church predecessor. The following tests should pass.
</p>
<pre class="code lisp"><span class="sy0">&gt;</span> <span class="br0">(</span><span class="br0">(</span><span class="br0">(</span>csub1 c5<span class="br0">)</span> add1<span class="br0">)</span> 0<span class="br0">)</span>
<span class="nu0">4</span>
<span class="sy0">&gt;</span> <span class="br0">(</span><span class="br0">(</span><span class="br0">(</span>csub1 c0<span class="br0">)</span> add1<span class="br0">)</span> 0<span class="br0">)</span>
0</pre>
<p>
In the second case, the Church predecessor of Church zero is zero, as we haven't a notion of negative numbers.
</p>

<p>
This was a difficult problem, but it's fun, so don't Google it. If you think it might help though, consider taking a <a href="http://link.springer.com/chapter/10.1007%2FBFb0062850" class="urlextern" title="http://link.springer.com/chapter/10.1007%2FBFb0062850" rel="nofollow">trip to the dentist</a>.
</p>

<p>
<!--- The old Monads Brainteaser. Here, until I know a better way to store old HW questions. 
Here is &#039;&#039;rembersum*even&#039;&#039;, with its helpers &#039;&#039;base&#039;&#039;, &#039;&#039;stuff&#039;&#039;, and &#039;&#039;grow&#039;&#039;. &#039;&#039;rembersum*even&#039;&#039; takes a nested list &#039;&#039;ls&#039;&#039; of values, removes all of the even numbers, and returns a sum of the even numbers in a pair with the new nested list. For example:

&lt;code lisp&gt;
&gt; (rembersum*even &#039;(5 (((7)) 9) 11))
(0 5 (((7)) 9) 11)
&gt; (rembersum*even  &#039;(2 3 (8 (c 6 7) 4 8 #t) 8 () 2 9))
(38 3 ((c 7) #t) () 9)
&lt;/code&gt;

Complete the definition of &#039;&#039;grow&#039;&#039; so that &#039;&#039;rembersum*even&#039;&#039; works properly, and include all four definitions in the file you turn in.

&lt;code lisp&gt;
(define base
  (lambda (t)
    `(0 . ,t)))

(define stuff
  (lambda (w)
    `(,w . macht-nicht)))

(define grow
  (lambda (c f)
    (let ((c^ _____))
      __________)))
 
(define rembersum*even
  (lambda (ls)
    (cond
      [(null? ls) (base &#039;())]
      [(pair? (car ls))
       (grow (rembersum*even (car ls))
         (lambda (a) (grow (rembersum*even (cdr ls)) (lambda (d) (base (cons a d))))))]
      [(and (number? (car ls)) (even? (car ls)))
       (grow (stuff (car ls)) (lambda (__) (rembersum*even (cdr ls))))]
      [else (grow (rembersum*even (cdr ls)) (lambda (d) (base (cons (car ls) d))))])))
&lt;/code&gt;

== Brainteaser for Dessert ==

Change the behavior of &#039;&#039;rembersum*even&#039;&#039; so that it returns a pair with a flat list of the even numbers it removes. Do this by changing **only** the definitions of &#039;&#039;base&#039;&#039;, &#039;&#039;stuff&#039;&#039;, and &#039;&#039;grow&#039;&#039;. Name the new procedure &#039;&#039;remberlist*even&#039;&#039;. For example:

&lt;code lisp&gt;
&gt; (remberlist*even &#039;(5 (((7)) 9) 11))
(() 5 (((7)) 9) 11)
&gt; (remberlist*even  &#039;(2 3 (8 (5 6 7) 4 8 7) 8 () 2 9))
((2 8 6 4 8 8 2) 3 ((5 7) 7) () 9)
&lt;/code&gt;
-->

</p>

</div>

    <!-- ......... wikipage stop  ......... -->
  </div>

  <div class="clearer">&nbsp;</div>

  
 
  <!--  footer -->  
  <div class="stylefoot">

        <div class="meta">
      <div class="doc">
		<p>assignment-3.txt ¬∑ Last modified: 2015/10/25 17:10 by jhemann</p>
      </div>
   </div>

    <div>
       <!--  breadcrumbs and search -->
	  	
	  

       
      <div class="clearer"></div>
    </div>

  </div>

</div>





<div class="no"><img src="/~c311/lib/exe/indexer.php?id=assignment-3&amp;1450283709" width="1" height="1" alt=""></div>


</body></html>Ytext/htmlUUTF-8•#’_WebResourceResponse_Ehttps://cgi.soic.indiana.edu/~c311/lib/exe/css.php?s=all&t=doogiestplO>bplist00‘jkX$versionX$objectsY$archiverT$top Ü†Ø #)*0123MNOPQRSTUVWXYZ[\]^_`adeU$null›	
 !"R$6S$10R$2R$7R$3S$11R$8V$classR$4R$9R$0R$5R$1Ä	ÄÄÄ ÄÄÄÄ”$%'(WNS.base[NS.relativeÄ ÄÄ_Ehttps://cgi.soic.indiana.edu/~c311/lib/exe/css.php?s=all&t=doogiestpl“+,-.Z$classnameX$classesUNSURL¢-/XNSObject#Aº#^¨Œp »”456ALWNS.keysZNS.objects™789:;<=>?@Ä	Ä
ÄÄÄÄÄÄÄÄ™BCDEFGHIJKÄÄÄÄÄÄÄÄÄÄÄ_Transfer-EncodingZConnectionVPragma]Last-Modified\Content-TypeVServerTDateZKeep-Alive]Cache-ControlTEtagXIdentityZKeep-AliveVpublic_Mon, 07 Jan 2013 17:24:26 GMT_text/css; charset=utf-8_…Apache/2.4.6 (Red Hat Enterprise Linux) OpenSSL/1.0.1e-fips mod_auth_kerb/5.4 mod_fcgid/2.3.9 SVN/1.7.14 mod_wsgi/3.4 Python/2.7.5 mod_fastcgi/mod_fastcgi-SNAP-0910052141 mod_perl/2.0.9dev Perl/v5.16.3_Wed, 16 Dec 2015 16:02:58 GMT_timeout=5, max=99_public, max-age=3600_""ef6f1827233f26a6a85eabf0a4a92db5"“+,bc\NSDictionary¢b/Xtext/css“+,fg_NSHTTPURLResponse£hi/_NSHTTPURLResponse]NSURLResponse_NSKeyedArchiver—lm_WebResourceResponseÄ    # - 2 7 Z ` { ~ Ç Ö à ã è í ô ú ü ¢ • ® ™ ¨ Æ ∞ ≤ ≥ µ ∑ π ª Ω ø ¡ » – ‹ ﬁ ‡ ‚*/:CILU^`biq|áâãçèëìïóôõ¶®™¨Æ∞≤¥∂∏∫º–€‚˝	"'0;Bb|Hh|ì∏Ω Õ÷€ÔÛ'*@             n              BOÖa.interwiki{background:transparent url(/~c311/lib/images/interwiki.png) 0px 1px no-repeat;padding-left:16px;}a.iw_wp{background-image:url(/~c311/lib/images/interwiki/wp.gif)}a.iw_wpde{background-image:url(/~c311/lib/images/interwiki/wpde.gif)}a.iw_wpmeta{background-image:url(/~c311/lib/images/interwiki/wpmeta.gif)}a.iw_doku{background-image:url(/~c311/lib/images/interwiki/doku.gif)}a.iw_sb{background-image:url(/~c311/lib/images/interwiki/sb.gif)}a.iw_amazon{background-image:url(/~c311/lib/images/interwiki/amazon.gif)}a.iw_amazon_de{background-image:url(/~c311/lib/images/interwiki/amazon.de.gif)}a.iw_amazon_uk{background-image:url(/~c311/lib/images/interwiki/amazon.uk.gif)}a.iw_phpfn{background-image:url(/~c311/lib/images/interwiki/phpfn.gif)}a.iw_dokubug{background-image:url(/~c311/lib/images/interwiki/dokubug.gif)}a.iw_coral{background-image:url(/~c311/lib/images/interwiki/coral.gif)}a.iw_google{background-image:url(/~c311/lib/images/interwiki/google.gif)}a.iw_meatball{background-image:url(/~c311/lib/images/interwiki/meatball.gif)}a.iw_wiki{background-image:url(/~c311/lib/images/interwiki/wiki.gif)}a.mediafile{background:transparent url(/~c311/lib/images/fileicons/file.png) 0px 1px no-repeat;padding-left:18px;padding-bottom:1px;}a.mf_jpg{background-image:url(/~c311/lib/images/fileicons/jpg.png)}a.mf_jpeg{background-image:url(/~c311/lib/images/fileicons/jpeg.png)}a.mf_gif{background-image:url(/~c311/lib/images/fileicons/gif.png)}a.mf_png{background-image:url(/~c311/lib/images/fileicons/png.png)}a.mf_tgz{background-image:url(/~c311/lib/images/fileicons/tgz.png)}a.mf_tar{background-image:url(/~c311/lib/images/fileicons/tar.png)}a.mf_gz{background-image:url(/~c311/lib/images/fileicons/gz.png)}a.mf_bz2{background-image:url(/~c311/lib/images/fileicons/bz2.png)}a.mf_zip{background-image:url(/~c311/lib/images/fileicons/zip.png)}a.mf_rar{background-image:url(/~c311/lib/images/fileicons/rar.png)}a.mf_pdf{background-image:url(/~c311/lib/images/fileicons/pdf.png)}a.mf_ps{background-image:url(/~c311/lib/images/fileicons/ps.png)}a.mf_doc{background-image:url(/~c311/lib/images/fileicons/doc.png)}a.mf_xls{background-image:url(/~c311/lib/images/fileicons/xls.png)}a.mf_ppt{background-image:url(/~c311/lib/images/fileicons/ppt.png)}a.mf_rtf{background-image:url(/~c311/lib/images/fileicons/rtf.png)}a.mf_swf{background-image:url(/~c311/lib/images/fileicons/swf.png)}a.mf_rpm{background-image:url(/~c311/lib/images/fileicons/rpm.png)}a.mf_deb{background-image:url(/~c311/lib/images/fileicons/deb.png)}a.mf_sxw{background-image:url(/~c311/lib/images/fileicons/sxw.png)}a.mf_sxc{background-image:url(/~c311/lib/images/fileicons/sxc.png)}a.mf_sxi{background-image:url(/~c311/lib/images/fileicons/sxi.png)}a.mf_sxd{background-image:url(/~c311/lib/images/fileicons/sxd.png)}a.mf_odc{background-image:url(/~c311/lib/images/fileicons/odc.png)}a.mf_odf{background-image:url(/~c311/lib/images/fileicons/odf.png)}a.mf_odg{background-image:url(/~c311/lib/images/fileicons/odg.png)}a.mf_odi{background-image:url(/~c311/lib/images/fileicons/odi.png)}a.mf_odp{background-image:url(/~c311/lib/images/fileicons/odp.png)}a.mf_ods{background-image:url(/~c311/lib/images/fileicons/ods.png)}a.mf_odt{background-image:url(/~c311/lib/images/fileicons/odt.png)}a.mf_html{background-image:url(/~c311/lib/images/fileicons/html.png)}a.mf_htm{background-image:url(/~c311/lib/images/fileicons/htm.png)}a.mf_txt{background-image:url(/~c311/lib/images/fileicons/txt.png)}Xtext/cssUutf-8’_?https://cgi.soic.indiana.edu/~c311/lib/exe/css.php?t=doogiestplO8bplist00‘jkX$versionX$objectsY$archiverT$top Ü†Ø #)*0123MNOPQRSTUVWXYZ[\]^_`adeU$null›	
 !"R$6S$10R$2R$7R$3S$11R$8V$classR$4R$9R$0R$5R$1Ä	ÄÄÄ ÄÄÄÄ”$%'(WNS.base[NS.relativeÄ ÄÄ_?https://cgi.soic.indiana.edu/~c311/lib/exe/css.php?t=doogiestpl“+,-.Z$classnameX$classesUNSURL¢-/XNSObject#Aº#^¨ÿ »”456ALWNS.keysZNS.objects™789:;<=>?@Ä	Ä
ÄÄÄÄÄÄÄÄ™BCDEFGHIJKÄÄÄÄÄÄÄÄÄÄÄ_Transfer-EncodingZConnectionVPragma]Last-Modified\Content-TypeVServerTDateZKeep-Alive]Cache-ControlTEtagXIdentityZKeep-AliveVpublic_Mon, 07 Jan 2013 17:24:26 GMT_text/css; charset=utf-8_…Apache/2.4.6 (Red Hat Enterprise Linux) OpenSSL/1.0.1e-fips mod_auth_kerb/5.4 mod_fcgid/2.3.9 SVN/1.7.14 mod_wsgi/3.4 Python/2.7.5 mod_fastcgi/mod_fastcgi-SNAP-0910052141 mod_perl/2.0.9dev Perl/v5.16.3_Wed, 16 Dec 2015 16:02:58 GMT_timeout=5, max=99_public, max-age=3600_""ef6f1827233f26a6a85eabf0a4a92db5"“+,bc\NSDictionary¢b/Xtext/css“+,fg_NSHTTPURLResponse£hi/_NSHTTPURLResponse]NSURLResponse_NSKeyedArchiver—lm_WebResourceResponseÄ    # - 2 7 Z ` { ~ Ç Ö à ã è í ô ú ü ¢ • ® ™ ¨ Æ ∞ ≤ ≥ µ ∑ π ª Ω ø ¡ » – ‹ ﬁ ‡ ‚$)4=CFOXZ\ckvÅÉÖáâãçèëìï†¢§¶®™¨Æ∞≤¥∂ ’‹Í˜˛!*5<\vBbvç≤∑ƒ«–’ÈÌ!$:             n              <Ok9a.interwiki{background:transparent url(/~c311/lib/images/interwiki.png) 0px 1px no-repeat;padding-left:16px;}a.iw_wp{background-image:url(/~c311/lib/images/interwiki/wp.gif)}a.iw_wpde{background-image:url(/~c311/lib/images/interwiki/wpde.gif)}a.iw_wpmeta{background-image:url(/~c311/lib/images/interwiki/wpmeta.gif)}a.iw_doku{background-image:url(/~c311/lib/images/interwiki/doku.gif)}a.iw_sb{background-image:url(/~c311/lib/images/interwiki/sb.gif)}a.iw_amazon{background-image:url(/~c311/lib/images/interwiki/amazon.gif)}a.iw_amazon_de{background-image:url(/~c311/lib/images/interwiki/amazon.de.gif)}a.iw_amazon_uk{background-image:url(/~c311/lib/images/interwiki/amazon.uk.gif)}a.iw_phpfn{background-image:url(/~c311/lib/images/interwiki/phpfn.gif)}a.iw_dokubug{background-image:url(/~c311/lib/images/interwiki/dokubug.gif)}a.iw_coral{background-image:url(/~c311/lib/images/interwiki/coral.gif)}a.iw_google{background-image:url(/~c311/lib/images/interwiki/google.gif)}a.iw_meatball{background-image:url(/~c311/lib/images/interwiki/meatball.gif)}a.iw_wiki{background-image:url(/~c311/lib/images/interwiki/wiki.gif)}a.mediafile{background:transparent url(/~c311/lib/images/fileicons/file.png) 0px 1px no-repeat;padding-left:18px;padding-bottom:1px;}a.mf_jpg{background-image:url(/~c311/lib/images/fileicons/jpg.png)}a.mf_jpeg{background-image:url(/~c311/lib/images/fileicons/jpeg.png)}a.mf_gif{background-image:url(/~c311/lib/images/fileicons/gif.png)}a.mf_png{background-image:url(/~c311/lib/images/fileicons/png.png)}a.mf_tgz{background-image:url(/~c311/lib/images/fileicons/tgz.png)}a.mf_tar{background-image:url(/~c311/lib/images/fileicons/tar.png)}a.mf_gz{background-image:url(/~c311/lib/images/fileicons/gz.png)}a.mf_bz2{background-image:url(/~c311/lib/images/fileicons/bz2.png)}a.mf_zip{background-image:url(/~c311/lib/images/fileicons/zip.png)}a.mf_rar{background-image:url(/~c311/lib/images/fileicons/rar.png)}a.mf_pdf{background-image:url(/~c311/lib/images/fileicons/pdf.png)}a.mf_ps{background-image:url(/~c311/lib/images/fileicons/ps.png)}a.mf_doc{background-image:url(/~c311/lib/images/fileicons/doc.png)}a.mf_xls{background-image:url(/~c311/lib/images/fileicons/xls.png)}a.mf_ppt{background-image:url(/~c311/lib/images/fileicons/ppt.png)}a.mf_rtf{background-image:url(/~c311/lib/images/fileicons/rtf.png)}a.mf_swf{background-image:url(/~c311/lib/images/fileicons/swf.png)}a.mf_rpm{background-image:url(/~c311/lib/images/fileicons/rpm.png)}a.mf_deb{background-image:url(/~c311/lib/images/fileicons/deb.png)}a.mf_sxw{background-image:url(/~c311/lib/images/fileicons/sxw.png)}a.mf_sxc{background-image:url(/~c311/lib/images/fileicons/sxc.png)}a.mf_sxi{background-image:url(/~c311/lib/images/fileicons/sxi.png)}a.mf_sxd{background-image:url(/~c311/lib/images/fileicons/sxd.png)}a.mf_odc{background-image:url(/~c311/lib/images/fileicons/odc.png)}a.mf_odf{background-image:url(/~c311/lib/images/fileicons/odf.png)}a.mf_odg{background-image:url(/~c311/lib/images/fileicons/odg.png)}a.mf_odi{background-image:url(/~c311/lib/images/fileicons/odi.png)}a.mf_odp{background-image:url(/~c311/lib/images/fileicons/odp.png)}a.mf_ods{background-image:url(/~c311/lib/images/fileicons/ods.png)}a.mf_odt{background-image:url(/~c311/lib/images/fileicons/odt.png)}a.mf_html{background-image:url(/~c311/lib/images/fileicons/html.png)}a.mf_htm{background-image:url(/~c311/lib/images/fileicons/htm.png)}a.mf_txt{background-image:url(/~c311/lib/images/fileicons/txt.png)}div.clearer{clear:both;line-height:0px;height:0;overflow:hidden;}div.no{display:inline;margin:0;padding:0;}.hidden{display:none;}div.error{background:#fcc url(/~c311/lib/styles/../images/error.png) 0.5em 0px no-repeat;color:#000;border-bottom:1px solid #faa;font-size:90%;margin:0;padding-left:3em;overflow:hidden;}div.info{background:#ccf url(/~c311/lib/styles/../images/info.png) 0.5em 0px no-repeat;color:#000;border-bottom:1px solid #aaf;font-size:90%;margin:0;padding-left:3em;overflow:hidden;}div.success{background:#cfc url(/~c311/lib/styles/../images/success.png) 0.5em 0px no-repeat;color:#000;border-bottom:1px solid #afa;font-size:90%;margin:0;padding-left:3em;overflow:hidden;}div.notify{background:#ffc url(/~c311/lib/styles/../images/notify.png) 0.5em 0px no-repeat;color:#000;border-bottom:1px solid #ffa;font-size:90%;margin:0;padding-left:3em;overflow:hidden;}.medialeft{float:left;}.mediaright{float:right;}.mediacenter{display:block;margin-left:auto;margin-right:auto;}.leftalign{text-align:left;}.centeralign{text-align:center;}.rightalign{text-align:right;}em.u{font-style:normal;text-decoration:underline;}em em.u{font-style:italic;}.code .br0{color:#6c6;}.code .co1{color:#808080;font-style:italic;}.code .co2{color:#808080;font-style:italic;}.code .co3{color:#808080;}.code .coMULTI{color:#808080;font-style:italic;}.code .es0{color:#009;font-weight:bold;}.code .kw1{color:#b1b100;}.code .kw2{color:#000;font-weight:bold;}.code .kw3{color:#006;}.code .kw4{color:#933;}.code .kw5{color:#00f;}.code .me1{color:#060;}.code .me2{color:#060;}.code .nu0{color:#c6c;}.code .re0{color:#00f;}.code .re1{color:#00f;}.code .re2{color:#00f;}.code .re3{color:#f33;font-weight:bold;}.code .re4{color:#099;}.code .st0{color:#f00;}.code .sy0{color:#6c6;}div#acl_manager div#acl__tree{font-size:90%;width:25%;height:300px;float:left;overflow:auto;border:1px solid #CCC;text-align:left;}div#acl_manager div#acl__tree a.cur{background-color:#ff9;font-weight:bold;}div#acl_manager div#acl__tree ul{list-style-type:none;margin:0;padding:0;}div#acl_manager div#acl__tree li{padding-left:1em;}div#acl_manager div#acl__tree ul img{margin-right:0.25em;cursor:pointer;}div#acl_manager div#acl__detail{width:73%;height:300px;float:right;overflow:auto;}div#acl_manager div#acl__detail fieldset{width:90%;}div#acl_manager div#acl__detail div#acl__user{border:1px solid #CCC;padding:0.5em;margin-bottom:0.6em;}div#acl_manager table.inline{width:100%;margin:0;}div#acl_manager .aclgroup{background:transparent url(/~c311/lib/plugins/acl/pix/group.png) 0px 1px no-repeat;padding:1px 0px 1px 18px;}div#acl_manager .acluser{background:transparent url(/~c311/lib/plugins/acl/pix/user.png) 0px 1px no-repeat;padding:1px 0px 1px 18px;}div#acl_manager .aclpage{background:transparent url(/~c311/lib/plugins/acl/pix/page.png) 0px 1px no-repeat;padding:1px 0px 1px 18px;}div#acl_manager .aclns{background:transparent url(/~c311/lib/plugins/acl/pix/ns.png) 0px 1px no-repeat;padding:1px 0px 1px 18px;}div#acl_manager label.disabled{color:#666!important;}#acl_manager label{text-align:left;font-weight:normal;display:inline;}#acl_manager table{margin-left:10%;width:80%;}#acl_manager table tr{background-color:inherit;}#acl_manager table tr:hover{background-color:#dee7ec;}blockquote.blockquote-plugin{margin:1em 3em 1em 3em !important;border:1px dotted #CCC !important;background:#e8e8e8 url(/~c311/lib/plugins/blockquote/images/blockquote.gif) no-repeat 0.3em 0.3em !important;padding:1em !important;}blockquote.blockquote-plugin[cite]:after{font-style:italic;text-align:right;display:block;content:"‚Äî" attr(cite);}cite.blockquote-plugin{font-style:italic;text-align:right;display:block;}cite.blockquote-plugin:before{content:"‚Äî";}#config__manager div.success,#config__manager div.error,#config__manager div.info{background-position:0.5em;padding:0.5em;text-align:center;}#config__manager fieldset{margin:1em;width:auto;margin-bottom:2em;background-color:#dee7ec;color:#000;padding:0 1em;}#config__manager legend{font-size:1.25em;}#config__manager form{}#config__manager table{margin:1em 0;width:100%;}#config__manager fieldset td{text-align:left;}#config__manager fieldset td.value{width:30em;}#config__manager td.label{padding:0.8em 0 0.6em 1em;vertical-align:top;}#config__manager td.label label{clear:both;display:block;}#config__manager td.label span.outkey{font-size:70%;margin-top:-1.7em;margin-left:-1em;display:block;background-color:#fff;color:#666;float:left;padding:0 0.1em;position:relative;z-index:1;}#config__manager td input.edit{width:30em;}#config__manager td select.edit{}#config__manager td textarea.edit{width:27.5em;height:4em;}#config__manager tr .input,#config__manager tr input,#config__manager tr textarea,#config__manager tr select{background-color:#fff;color:#000;}#config__manager tr.default .input,#config__manager tr.default input,#config__manager tr.default textarea,#config__manager tr.default select,#config__manager .selectiondefault{background-color:#cdf;color:#000;}#config__manager tr.protected .input,#config__manager tr.protected input,#config__manager tr.protected textarea,#config__manager tr.protected select,#config__manager tr.protected .selection{background-color:#fcc!important;color:#000 !important;}#config__manager td.error{background-color:red;color:#000;}#config__manager .selection{width:14.8em;float:left;margin:0 0.3em 2px 0;}#config__manager .selection label{float:right;width:14em;font-size:90%;}* html #config__manager .selection label{padding-top:2px;}#config__manager .selection input.checkbox{padding-left:0.7em;}#config__manager .other{clear:both;padding-top:0.5em;}#config__manager .other label{padding-left:2px;font-size:90%;}#user__manager tr.disabled{color:#6f6f6f;background:#e4e4e4;}#user__manager tr.user_info{vertical-align:top;}#user__manager div.edit_user{width:46%;float:left;}#user__manager table{margin-bottom:1em;}#user__manager input.button[disabled]{color:#ccc!important;border-color:#ccc!important;}#plugin__manager{}#plugin__manager h2{margin-left:0;}#plugin__manager form{display:block;margin:0;padding:0;}#plugin__manager legend{display:none;}#plugin__manager fieldset{width:auto;}#plugin__manager .button{margin:0;}#plugin__manager p,#plugin__manager label{text-align:left;}#plugin__manager .hidden{display:none;}#plugin__manager .new{background:#dee7ec;}#plugin__manager input[disabled]{color:#ccc;border-color:#ccc;}#plugin__manager .pm_menu,#plugin__manager .pm_info{margin-left:0;text-align:left;}#plugin__manager .pm_menu{float:left;width:48%;}#plugin__manager .pm_info{float:right;width:50%;}#plugin__manager .common{}#plugin__manager .common form{}#plugin__manager .common fieldset{margin:0;padding:0 0 1.0em 0;text-align:left;border:none;}#plugin__manager .common label{padding:0 0 0.5em 0;}#plugin__manager .common input{}#plugin__manager .common input.edit{width:24em;margin:0.5em;}#plugin__manager .common .button{}#plugin__manager form.plugins{}#plugin__manager .plugins fieldset{color:#000;background:#fff;text-align:right;border-top:none;border-right:none;border-left:none;}#plugin__manager .plugins fieldset.protected{background:#fdd;color:#000;}#plugin__manager .plugins fieldset.disabled{background:#e0e0e0;color:#a8a8a8;}#plugin__manager .plugins .legend{color:#000;background:inherit;display:block;margin:0;padding:0;font-size:1em;line-height:1.4em;font-weight:normal;text-align:left;float:left;padding:0;clear:none;}#plugin__manager .plugins .button{font-size:95%;}#plugin__manager .plugins fieldset.buttons{border:none;}#plugin__manager .plugins fieldset.buttons .button{float:left;}#plugin__manager .pm_info h3{margin-left:0;}#plugin__manager .pm_info dl{margin:1em 0;padding:0;}#plugin__manager .pm_info dt{width:6em;float:left;clear:left;margin:0;padding:0;}#plugin__manager .pm_info dd{margin:0 0 0 7em;padding:0;background:none;}#plugin__manager .plugins .enable{float:left;width:auto;margin-right:0.5em;}div.dokuwiki .header{background-color:#1b325f;margin:5px;height:130px;min-width:825px;position:relative;z-index:0;}div.dokuwiki .header_left{position:absolute;top:0px;left:0px;width:350px;height:130px;z-index:1;}div.dokuwiki .logo{position:absolute;top:45px;left:30px;font-size:175%;text-align:left;white-space:nowrap;z-index:2;}div.dokuwiki .logo a{color:#dee7ec !important;text-decoration:none !important;}div.dokuwiki .header_right{position:absolute;top:0px;right:0px;width:475px;height:130px;z-index:1;}div.dokuwiki .pagename{position:absolute;top:45px;right:30px;font-size:100%;font-weight:bolder;color:#dee7ec;text-align:right;white-space:nowrap;z-index:2;}div.dokuwiki .pagename a{color:white !important;text-decoration:none !important;}div.dokuwiki .tabnavi{position:absolute;left:480px;bottom:0px;width:800px;margin-left:-400px;z-index:5;}div.dokuwiki #tabnavi ul{margin:0;padding:0;list-style:none;}div.dokuwiki #tabnavi li{float:left;padding:0 0 0 7px;margin:0 10px 0 0;background:url(/~c311/lib/tpl/doogiestpl/images/rounded-corners-left.png) no-repeat top left;}div.dokuwiki #tabnavi a{display:block;color:#dee7ec;margin:0;padding:4px 12px 0 5px;background:url(/~c311/lib/tpl/doogiestpl/images/rounded-corners-right.png) no-repeat top right;}div.dokuwiki #tabnavi #current{color:#000;font-weight:bolder;padding:0 0 0 7px;margin:0 10px 0 0;background:url(/~c311/lib/tpl/doogiestpl/images/rounded-corners-left-active.png) no-repeat top left;}div.dokuwiki #tabnavi #current_inner{margin:0;padding:4px 12px 1px 5px;background:url(/~c311/lib/tpl/doogiestpl/images/rounded-corners-right-active.png) no-repeat top right;}div.dokuwiki div.hfeed{}div.dokuwiki div.hfeed div.hentry{margin-bottom:15px;background:url(/~c311/lib/tpl/doogiestpl/images/gradient.png) no-repeat top;}div.dokuwiki div.hfeed div.entry-content{padding:5px;}div.dokuwiki div.hfeed h1,div.dokuwiki div.hfeed h2{margin-top:0px;margin-bottom:0px;padding-left:15px;}div.dokuwiki div.hfeed div.inclmeta{border:none;padding:0 5px 15px 15px;margin:0;}div.dokuwiki div.inclmeta .tags{background:transparent url(/~c311/lib/tpl/doogiestpl/images/tag.gif) 0px 1px no-repeat;padding:1px 0px 1px 16px;font-size:100%;text-align:left;float:none;clear:none;}div.dokuwiki .bar{border-top:1px solid #CCC;border-bottom:1px solid #CCC;background:#dee7ec;padding:0 15px;clear:both;}div.dokuwiki .bar-left{float:left;}div.dokuwiki .bar-right{float:right;text-align:right;}div.dokuwiki #bar__bottom{padding-bottom:1em;margin-bottom:5px;}div.dokuwiki div.meta{clear:both;color:#638c9c;font-size:80%;margin-top:20px;margin-bottom:10px;}div.dokuwiki div.meta div.user{float:left;padding-left:10px;}div.dokuwiki div.meta div.doc{text-align:center;}*{padding:0;margin:0;}body{font:90% Helvetica,Arial,sans-serif;background-color:wik;color:#000;}div.dokuwiki div.page{margin:0 auto;padding:0 80px 0 80px;}div.dokuwiki table{font-size:100%;}div.dokuwiki tr,div.dokuwiki td,div.dokuwiki th{}div.dokuwiki img{border:0;}div.dokuwiki p{margin-bottom:0.5em;}div.dokuwiki blockquote,div.dokuwiki table,div.dokuwiki pre{margin:0 0 1.0em 0;}div.dokuwiki hr{border:0px;border-top:1px solid #CCC;text-align:center;height:0px;}div.dokuwiki div.nothing{text-align:center;margin:2em;}div.dokuwiki form{border:none;display:inline;}div.dokuwiki label.block{display:block;text-align:right;font-weight:bold;}div.dokuwiki label.simple{display:block;text-align:left;font-weight:normal;}div.dokuwiki label.block input.edit{width:50%;}div.dokuwiki fieldset{width:300px;text-align:center;border:1px solid #CCC;padding:0.5em;margin:auto;}div.dokuwiki textarea.edit{font-family:monospace;font-size:14px;color:#000;background-color:#fff;border:1px solid #CCC;padding:0.3em 0 0 0.3em;width:100%;}html>body div.dokuwiki textarea.edit{background:#fff url(/~c311/lib/tpl/doogiestpl/images/inputshadow.png) repeat-x top;}div.dokuwiki input.edit,div.dokuwiki select.edit{font-size:100%;border:1px solid #CCC;color:#000;background-color:#fff;vertical-align:middle;margin:1px;padding:0.20em 0.3em;display:inline;}html>body div.dokuwiki input.edit,html>body div.dokuwiki select.edit{background:#fff url(/~c311/lib/tpl/doogiestpl/images/inputshadow.png) repeat-x top;}div.dokuwiki select.edit{padding:0.1em 0;}div.dokuwiki input.missing{font-size:100%;border:1px solid #CCC;color:#000;background-color:#fcc;vertical-align:middle;margin:1px;padding:0.20em 0.3em;display:inline;}div.dokuwiki textarea.edit[disabled],div.dokuwiki textarea.edit[readonly],div.dokuwiki input.edit[disabled],div.dokuwiki input.edit[readonly],div.dokuwiki select.edit[disabled]{background-color:#e8e8e8!important;color:#666!important;}div.dokuwiki div.toolbar,div.dokuwiki div#wiki__editbar{margin:2px 0;text-align:left;}div.dokuwiki div#size__ctl{float:right;width:60px;height:2.7em;}div.dokuwiki #size__ctl img{cursor:pointer;}div.dokuwiki div#wiki__editbar div.editButtons{float:left;padding:0 1.0em 0.7em 0;}div.dokuwiki div#wiki__editbar div.summary{float:left;}div.dokuwiki .nowrap{white-space:nowrap;}div.dokuwiki div#draft__status{float:right;color:#638c9c;}div.dokuwiki input.button,div.dokuwiki button.button{border:1px solid #CCC;color:#000;background-color:#fff;vertical-align:middle;text-decoration:none;font-size:100%;cursor:pointer;margin:1px;padding:0.125em 0.4em;}html>body div.dokuwiki input.button,html>body div.dokuwiki button.button{background:#fff url(/~c311/lib/tpl/doogiestpl/images/buttonshadow.png) repeat-x bottom;}* html div.dokuwiki input.button,* html div.dokuwiki button.button{height:1.8em;}div.dokuwiki div.secedit input.button{border:1px solid #CCC;color:#000;background-color:#fff;vertical-align:middle;text-decoration:none;margin:0;padding:0;font-size:10px;cursor:pointer;float:right;display:inline;}div.dokuwiki div.pagenav{margin:1em 0 0 0;}div.dokuwiki div.pagenav-prev{text-align:right;float:left;width:49%}div.dokuwiki div.pagenav-next{text-align:left;float:right;width:49%}div.dokuwiki a:link,div.dokuwiki a:visited{color:#436976;text-decoration:none;}div.dokuwiki a:hover,div.dokuwiki a:active{color:#000;text-decoration:underline;}div.dokuwiki h1 a,div.dokuwiki h2 a,div.dokuwiki h3 a,div.dokuwiki h4 a,div.dokuwiki h5 a,div.dokuwiki a.nolink{color:#000 !important;text-decoration:none !important;}div.dokuwiki a.urlextern{background:transparent url(/~c311/lib/tpl/doogiestpl/images/link_icon.gif) 0px 1px no-repeat;padding:1px 0px 1px 16px;}div.dokuwiki a.windows{background:transparent url(/~c311/lib/tpl/doogiestpl/images/windows.gif) 0px 1px no-repeat;padding:1px 0px 1px 16px;}div.dokuwiki a.interwiki{}div.dokuwiki a.media{}div.dokuwiki a.urlextern:link,div.dokuwiki a.windows:link,div.dokuwiki a.interwiki:link{color:#436976;}div.dokuwiki a.urlextern:visited,div.dokuwiki a.windows:visited,div.dokuwiki a.interwiki:visited{color:purple;}div.dokuwiki a.urlextern:hover,div.dokuwiki a.urlextern:active,div.dokuwiki a.windows:hover,div.dokuwiki a.windows:active,div.dokuwiki a.interwiki:hover,div.dokuwiki a.interwiki:active{color:#000;}div.dokuwiki a.mail{background:transparent url(/~c311/lib/tpl/doogiestpl/images/mail_icon.gif) 0px 1px no-repeat;padding:1px 0px 1px 16px;}div.dokuwiki a.wikilink1{color:#00E !important;}div.dokuwiki a.wikilink2{color:#f30 !important;text-decoration:none !important;border-bottom:dashed 1px #f30 !important;}div.dokuwiki div.preview{background-color:#e8e8e8;margin:0 0 0 2em;padding:4px;border:1px dashed #000;}div.dokuwiki div.breadcrumbs{background-color:#dee7ec;color:#638c9c;font-size:80%;}div.dokuwiki span.user{color:#ccc;font-size:90%;}div.dokuwiki li.minor{color:#666;font-style:italic;}div.dokuwiki img.media{margin:3px;}div.dokuwiki img.medialeft{border:0;float:left;margin:0 1.5em 0 0;}div.dokuwiki img.mediaright{border:0;float:right;margin:0 0 0 1.5em;}div.dokuwiki img.mediacenter{border:0;display:block;margin:0 auto;}div.dokuwiki img.middle{vertical-align:middle;}div.dokuwiki acronym{cursor:help;border-bottom:1px dotted #000;}div.dokuwiki h1,div.dokuwiki h2,div.dokuwiki h3,div.dokuwiki h4,div.dokuwiki h5{color:#000;background-color:inherit;font-size:100%;font-weight:normal;margin-top:15px;margin-bottom:8px;border-bottom:1px solid #dee7ec;clear:left;}div.dokuwiki h1{font-size:160%;margin-left:0px;font-weight:bold;}div.dokuwiki h2{font-size:150%;margin-left:0px;}div.dokuwiki h3{font-size:140%;margin-left:0px;border-bottom:none;font-weight:bold;}div.dokuwiki h4{font-size:120%;margin-left:0px;border-bottom:none;font-weight:bold;}div.dokuwiki h5{font-size:100%;margin-left:0px;border-bottom:none;font-weight:bold;}div.dokuwiki ul{line-height:1.5em;list-style-type:square;list-style-image:none;margin:0 0 0.5em 1.5em;color:#638c9c;}div.dokuwiki ol{line-height:1.5em;list-style-image:none;margin:0 0 0.5em 1.5em;color:#638c9c;font-weight:bold;}div.dokuwiki .li{color:#000;font-weight:normal;}div.dokuwiki ol{list-style-type:decimal}div.dokuwiki ol ol{list-style-type:upper-roman}div.dokuwiki ol ol ol{list-style-type:lower-alpha}div.dokuwiki ol ol ol ol{list-style-type:lower-greek}div.dokuwiki li.open{list-style-image:url(/~c311/lib/tpl/doogiestpl/images/open.gif);}div.dokuwiki li.closed{list-style-image:url(/~c311/lib/tpl/doogiestpl/images/closed.gif);}div.dokuwiki blockquote{border-left:2px solid #CCC;padding-left:3px;}div.dokuwiki pre{font-size:120%;padding:0.5em;border:1px dashed #CCC;color:#000;overflow:auto;}div.dokuwiki pre.pre{background-color:#f7f9fa;}0re.code{background-color:#f7f9fa;}div.dokuwiki code{font-size:120%;}div.dokuwiki pre.file{background-color:#dee7ec;}div.dokuwiki table.inline{background-color:#fff;border-spacing:0px;border-collapse:collapse;}div.dokuwiki table.inline th{padding:3px;border:1px solid #CCC;background-color:#dee7ec;}div.dokuwiki table.inline td{padding:3px;border:1px solid #CCC;}div.dokuwiki div.toc{margin:0 0 0 2em;float:right;width:200px;font-size:80%;z-index:99;clear:both;}div.dokuwiki div.tocheader{border:1px solid #CCC;background-color:#dee7ec;text-align:left;font-weight:normal;padding:3px;margin-bottom:2px;}div.dokuwiki span.toc_open,div.dokuwiki span.toc_close{border:0.4em solid #dee7ec;float:right;display:block;margin:0.4em 3px 0 0;}div.dokuwiki span.toc_open span,div.dokuwiki span.toc_close span{display:none;}div.dokuwiki span.toc_open{margin-top:0.4em;border-top:0.4em solid #000;}div.dokuwiki span.toc_close{margin-top:0;border-bottom:0.4em solid #000;}div.dokuwiki #toc__inside{border:1px solid #CCC;background-color:#fff;text-align:left;padding:0.5em 0 0.7em 0;}div.dokuwiki ul.toc{list-style-type:none;list-style-image:none;line-height:1.2em;padding-left:1em;margin:0;}div.dokuwiki ul.toc li{background:transparent url(/~c311/lib/tpl/doogiestpl/images/tocdot2.gif) 0 0.6em no-repeat;padding-left:0.4em;}div.dokuwiki ul.toc li.clear{background-image:none;padding-left:0.4em;}div.dokuwiki a.toc:link,div.dokuwiki a.toc:visited{color:#436976;}div.dokuwiki a.toc:hover,div.dokuwiki a.toc:active{color:#000;}div.dokuwiki table.diff{background-color:#fff;width:100%;}div.dokuwiki td.diff-blockheader{font-weight:bold;}div.dokuwiki table.diff th{border-bottom:1px solid #CCC;font-size:120%;width:50%;font-weight:normal;text-align:left;}div.dokuwiki table.diff td{font-family:monospace;font-size:100%;}div.dokuwiki td.diff-addedline{background-color:#dfd;}div.dokuwiki td.diff-deletedline{background-color:#ffb;}div.dokuwiki td.diff-context{background-color:#e8e8e8;}div.dokuwiki table.diff td.diff-addedline strong,div.dokuwiki table.diff td.diff-deletedline strong{color:red;}div.dokuwiki div.footnotes{clear:both;border-top:1px solid #CCC;padding-left:1em;margin-top:1em;}div.dokuwiki div.fn{font-size:90%;}div.dokuwiki a.fn_bot{font-weight:bold;}div.insitu-footnote{font-size:80%;line-height:1.2em;border:1px solid #CCC;background-color:#f7f9fa;text-align:left;padding:4px;max-width:40%;}* html .insitu-footnote pre.code,* html .insitu-footnote pre.file{padding-bottom:18px;}div.dokuwiki .search_result{margin-bottom:6px;padding:0 10px 0 30px;}div.dokuwiki .search_snippet{color:#ccc;font-size:12px;margin-left:20px;}div.dokuwiki .search_sep{color:#000;}div.dokuwiki .search_hit{color:#000;background-color:#ff9;}div.dokuwiki strong.search_hit{font-weight:normal;}div.dokuwiki div.search_quickresult{margin:0 0 15px 30px;padding:0 10px 10px 0;border-bottom:1px dashed #CCC;}div.dokuwiki div.search_quickresult h3{margin:0 0 1.0em 0;font-size:1em;font-weight:bold;}div.dokuwiki ul.search_quickhits{margin:0 0 0.5em 1.0em;}div.dokuwiki ul.search_quickhits li{margin:0 1.0em 0 1.0em;float:left;width:30%;}div.footerinc{text-align:center;}.footerinc a img{opacity:0.5;border:0;}.footerinc a:hover img{opacity:1;}div.dokuwiki .search{position:relative;}div.dokuwiki div.ajax_qsearch{position:absolute;right:0px;bottom:25px;width:200px;opacity:0.9;display:none;font-size:80%;line-height:1.2em;border:1px solid #CCC;background-color:#f7f9fa;text-align:left;padding:4px;}button.toolbutton{background-color:#fff;padding:0px;margin:0 1px 0 0;border:1px solid #CCC;cursor:pointer;}html>body button.toolbutton{background:#fff url(/~c311/lib/tpl/doogiestpl/images/buttonshadow.png) repeat-x bottom;}div.picker{width:250px;border:1px solid #CCC;background-color:#dee7ec;}button.pickerbutton{padding:0px;margin:0 1px 1px 0;border:0;background-color:transparent;font-size:80%;cursor:pointer;}div.dokuwiki div.img_big{float:left;margin-right:0.5em;}div.dokuwiki dl.img_tags dt{font-weight:bold;background-color:#dee7ec;}div.dokuwiki dl.img_tags dd{background-color:#e8e8e8;}div.dokuwiki div.imagemeta{color:#666;font-size:70%;line-height:95%;}div.dokuwiki div.imagemeta img.thumb{float:left;margin-right:0.1em;}#media__manager{height:100%;overflow:hidden;}#media__left{width:30%;border-right:solid 1px #CCC;height:100%;overflow:auto;position:absolute;left:0;}#media__right{width:69.7%;height:100%;overflow:auto;position:absolute;right:0;}#media__manager h1{margin:0;padding:0;margin-bottom:0.5em;}#media__tree img{float:left;padding:0.5em 0.3em 0 0;}#media__tree ul{list-style-type:none;list-style-image:none;}#media__tree li{clear:left;list-style-type:none;list-style-image:none;}*+html #media__tree li,* html #media__tree li{border:1px solid #fff;}#media__opts{padding-left:1em;margin-bottom:0.5em;}#media__opts input{float:left;position:absolute;}*+html #media__opts input,* html #media__opts input{position:static;}#media__opts label{display:block;float:left;margin-left:30px;}*+html #media__opts label,* html #media__opts label{margin-left:10px;}#media__opts br{clear:left;}#media__content img.load{margin:1em auto;}#media__content #scroll__here{border:1px dashed #CCC;}#media__content .odd{background-color:#f7f9fa;padding:0.4em;}#media__content .even{padding:0.4em;}#media__content a.mediafile{margin-right:1.5em;font-weight:bold;}#media__content div.detail{padding:0.3em 0 0.3em 2em;}#media__content div.detail div.thumb{float:left;width:130px;text-align:center;margin-right:0.4em;}#media__content img.btn{vertical-align:text-bottom;}#media__content div.example{color:#666;margin-left:1em;}#media__content div.upload{font-size:90%;padding:0 0.5em 0.5em 0.5em;}#media__content form#dw__upload{display:block;border-bottom:solid 1px #CCC;padding:0 0.5em 1em 0.5em;}#media__content form#dw__upload fieldset{padding:0;margin:0;border:none;width:auto;}#media__content form#dw__upload p{text-align:left;padding:0.25em 0;margin:0;line-height:1.0em;}#media__content form#dw__upload label.check{float:none;width:auto;margin-left:11.5em;}#media__content form.meta{display:block;padding:0 0 1em 0;}#media__content form.meta label{display:block;width:25%;float:left;font-weight:bold;margin-left:1em;clear:left;}#media__content form.meta .edit{font:100% "Lucida Grande",Verdana,Lucida,Helvetica,Arial,sans-serif;float:left;width:70%;padding-right:0;padding-left:0.2em;margin:2px;}#media__content form.meta textarea.edit{height:8em;}#media__content form.meta div.metafield{clear:left;}#media__content form.meta div.buttons{clear:left;margin-left:20%;padding-left:1em;}html>body div.dokuwiki form.btn_edit input.button{padding:0.125em 0.4em 0.125em 2em;background:#fff url(/~c311/lib/tpl/doogiestpl/images/UWEBshadow.png) no-repeat left bottom;}’_Ghttps://cgi.soic.indiana.edu/~c311/lib/exe/css.php?s=print&t=doogiestplO@bplist00‘jkX$versionX$objectsY$archiverT$top Ü†Ø #)*0123MNOPQRSTUVWXYZ[\]^_`adeU$null›	
 !"R$6S$10R$2R$7R$3S$11R$8V$classR$4R$9R$0R$5R$1Ä	ÄÄÄ ÄÄÄÄ”$%'(WNS.base[NS.relativeÄ ÄÄ_Ghttps://cgi.soic.indiana.edu/~c311/lib/exe/css.php?s=print&t=doogiestpl“+,-.Z$classnameX$classesUNSURL¢-/XNSObject#Aº#^≠	¿ »”456ALWNS.keysZNS.objects™789:;<=>?@Ä	Ä
ÄÄÄÄÄÄÄÄ™BCDEFGHIJKÄÄÄÄÄÄÄÄÄÄÄ_Transfer-EncodingZConnectionVPragma]Last-Modified\Content-TypeVServerTDateZKeep-Alive]Cache-ControlTEtagXIdentityZKeep-AliveVpublic_Mon, 07 Jan 2013 17:24:26 GMT_text/css; charset=utf-8_…Apache/2.4.6 (Red Hat Enterprise Linux) OpenSSL/1.0.1e-fips mod_auth_kerb/5.4 mod_fcgid/2.3.9 SVN/1.7.14 mod_wsgi/3.4 Python/2.7.5 mod_fastcgi/mod_fastcgi-SNAP-0910052141 mod_perl/2.0.9dev Perl/v5.16.3_Wed, 16 Dec 2015 16:02:59 GMT_timeout=5, max=99_public, max-age=3600_""ef6f1827233f26a6a85eabf0a4a92db5"“+,bc\NSDictionary¢b/Xtext/css“+,fg_NSHTTPURLResponse£hi/_NSHTTPURLResponse]NSURLResponse_NSKeyedArchiver—lm_WebResourceResponseÄ    # - 2 7 Z ` { ~ Ç Ö à ã è í ô ú ü ¢ • ® ™ ¨ Æ ∞ ≤ ≥ µ ∑ π ª Ω ø ¡ » – ‹ ﬁ ‡ ‚,1<EKNW`bdks~âãçèëìïóôõù®™¨Æ∞≤¥∂∏∫ºæ“›‰Úˇ$)2=Dd~Jj~ï∫øÃœÿ›Òı	),B             n              DOáa.interwiki{background:transparent url(/~c311/lib/images/interwiki.png) 0px 1px no-repeat;padding-left:16px;}a.iw_wp{background-image:url(/~c311/lib/images/interwiki/wp.gif)}a.iw_wpde{background-image:url(/~c311/lib/images/interwiki/wpde.gif)}a.iw_wpmeta{background-image:url(/~c311/lib/images/interwiki/wpmeta.gif)}a.iw_doku{background-image:url(/~c311/lib/images/interwiki/doku.gif)}a.iw_sb{background-image:url(/~c311/lib/images/interwiki/sb.gif)}a.iw_amazon{background-image:url(/~c311/lib/images/interwiki/amazon.gif)}a.iw_amazon_de{background-image:url(/~c311/lib/images/interwiki/amazon.de.gif)}a.iw_amazon_uk{background-image:url(/~c311/lib/images/interwiki/amazon.uk.gif)}a.iw_phpfn{background-image:url(/~c311/lib/images/interwiki/phpfn.gif)}a.iw_dokubug{background-image:url(/~c311/lib/images/interwiki/dokubug.gif)}a.iw_coral{background-image:url(/~c311/lib/images/interwiki/coral.gif)}a.iw_google{background-image:url(/~c311/lib/images/interwiki/google.gif)}a.iw_meatball{background-image:url(/~c311/lib/images/interwiki/meatball.gif)}a.iw_wiki{background-image:url(/~c311/lib/images/interwiki/wiki.gif)}a.mediafile{background:transparent url(/~c311/lib/images/fileicons/file.png) 0px 1px no-repeat;padding-left:18px;padding-bottom:1px;}a.mf_jpg{background-image:url(/~c311/lib/images/fileicons/jpg.png)}a.mf_jpeg{background-image:url(/~c311/lib/images/fileicons/jpeg.png)}a.mf_gif{background-image:url(/~c311/lib/images/fileicons/gif.png)}a.mf_png{background-image:url(/~c311/lib/images/fileicons/png.png)}a.mf_tgz{background-image:url(/~c311/lib/images/fileicons/tgz.png)}a.mf_tar{background-image:url(/~c311/lib/images/fileicons/tar.png)}a.mf_gz{background-image:url(/~c311/lib/images/fileicons/gz.png)}a.mf_bz2{background-image:url(/~c311/lib/images/fileicons/bz2.png)}a.mf_zip{background-image:url(/~c311/lib/images/fileicons/zip.png)}a.mf_rar{background-image:url(/~c311/lib/images/fileicons/rar.png)}a.mf_pdf{background-image:url(/~c311/lib/images/fileicons/pdf.png)}a.mf_ps{background-image:url(/~c311/lib/images/fileicons/ps.png)}a.mf_doc{background-image:url(/~c311/lib/images/fileicons/doc.png)}a.mf_xls{background-image:url(/~c311/lib/images/fileicons/xls.png)}a.mf_ppt{background-image:url(/~c311/lib/images/fileicons/ppt.png)}a.mf_rtf{background-image:url(/~c311/lib/images/fileicons/rtf.png)}a.mf_swf{background-image:url(/~c311/lib/images/fileicons/swf.png)}a.mf_rpm{background-image:url(/~c311/lib/images/fileicons/rpm.png)}a.mf_deb{background-image:url(/~c311/lib/images/fileicons/deb.png)}a.mf_sxw{background-image:url(/~c311/lib/images/fileicons/sxw.png)}a.mf_sxc{background-image:url(/~c311/lib/images/fileicons/sxc.png)}a.mf_sxi{background-image:url(/~c311/lib/images/fileicons/sxi.png)}a.mf_sxd{background-image:url(/~c311/lib/images/fileicons/sxd.png)}a.mf_odc{background-image:url(/~c311/lib/images/fileicons/odc.png)}a.mf_odf{background-image:url(/~c311/lib/images/fileicons/odf.png)}a.mf_odg{background-image:url(/~c311/lib/images/fileicons/odg.png)}a.mf_odi{background-image:url(/~c311/lib/images/fileicons/odi.png)}a.mf_odp{background-image:url(/~c311/lib/images/fileicons/odp.png)}a.mf_ods{background-image:url(/~c311/lib/images/fileicons/ods.png)}a.mf_odt{background-image:url(/~c311/lib/images/fileicons/odt.png)}a.mf_html{background-image:url(/~c311/lib/images/fileicons/html.png)}a.mf_htm{background-image:url(/~c311/lib/images/fileicons/htm.png)}a.mf_txt{background-image:url(/~c311/lib/images/fileicons/txt.png)}body{font:10pt "Lucida Grande",Verdana,Lucida,Helvetica,Arial,sans-serif;background-color:White;color:Black;}table{font-size:100%;padding:0;margin:0;}tr,td,th{padding:0;margin:0;}img{border:0}a{color:#000;text-decoration:none;background:none !important;}div.meta{clear:both;margin-top:1em;font-size:70%;text-align:right;}div.notify,div.info,div.success,div.error,div.breadcrumbs,div.secedit{display:none;}a.urlextern:after{content:" [" attr(href) "]";font-size:90%;}a.interwiki:after{content:" [" attr(href) "]";font-size:90%;}a.mail:after{content:" [" attr(href) "]";font-size:90%;}a.wikilink1{text-decoration:underline}div.page{text-align:justify;}h1,h2,h3,h4,h5{color:Black;background-color:transparent;font-family:"Lucida Grande",Verdana,Lucida,Helvetica,Arial,sans-serif;font-size:100%;font-weight:normal;margin-left:0;margin-right:0;margin-top:0;margin-bottom:1em;padding-left:0;padding-right:0;padding-top:0.5em;padding-bottom:0;border-bottom:1px solid #000;clear:left;}h1{font-size:160%;font-weight:bold;}h2{font-size:150%;}h3{font-size:140%;border-bottom:none;}h4{font-size:120%;border-bottom:none;}h5{font-size:100%;border-bottom:none;}img.media{margin:3px;}img.medialeft{border:0;float:left;margin:0 1.5em 0 0;}img.mediaright{border:0;float:right;margin:0 0 0 1.5em;}ul{line-height:1.5em;list-style-type:square;margin:0 0 0.5em 1.5em;padding:0;}ol{line-height:1.5em;margin:0 0 0.5em 2.5em;padding:0;font-weight:normal;}ol ol{margin:0 0 0.5em 1.5em;}div.dokuwiki ol{list-style-type:decimal}div.dokuwiki ol ol{list-style-type:upper-roman}div.dokuwiki ol ol ol{list-style-type:lower-alpha}div.dokuwiki ol ol ol ol{list-style-type:lower-greek}span.li{font-weight:normal;}pre.pre{font-size:8pt;padding:0.5em;border:1px dashed #000;color:Black;overflow:visible;}pre.code{font-size:8pt;padding:0.5em;border:1px dashed #000;color:Black;overflow:visible;}code{font-size:120%;}pre.file{font-size:8pt;padding:0.5em;border:1px dotted #000;color:Black;overflow:visible;}div.footnotes{clear:both;border-top:1px solid #000;padding-left:1em;margin-top:1em;}div.fn{font-size:90%;}a.fn_top{vertical-align:super;font-size:80%;}a.fn_bot{vertical-align:super;font-size:80%;font-weight:bold;}acronym{border:0;}table.inline{font-size:80%;background-color:#fff;border-spacing:0px;border-collapse:collapse;}table.inline th{padding:3px;border:1px solid #000;border-bottom:2px solid #000;}table.inline td{padding:3px;border:1px solid #000;}.leftalign{text-align:left;}.centeralign{text-align:center;}.rightalign{text-align:right;}.toc,.footerinc,.header,.bar,.user{display:none}’ !"_@https://cgi.soic.indiana.edu/~c311/lib/exe/js.php?edit=0&write=0OJbplist00‘jkX$versionX$objectsY$archiverT$top Ü†Ø #)*0123MNOPQRSTUVWXYZ[\]^_`adeU$null›	
 !"R$6S$10R$2R$7R$3S$11R$8V$classR$4R$9R$0R$5R$1Ä	ÄÄÄ ÄÄÄÄ”$%'(WNS.base[NS.relativeÄ ÄÄ_@https://cgi.soic.indiana.edu/~c311/lib/exe/js.php?edit=0&write=0“+,-.Z$classnameX$classesUNSURL¢-/XNSObject#Aº#^≠ »”456ALWNS.keysZNS.objects™789:;<=>?@Ä	Ä
ÄÄÄÄÄÄÄÄ™BCDEFGHIJKÄÄÄÄÄÄÄÄÄÄÄ_Transfer-EncodingZConnectionVPragma]Last-Modified\Content-TypeVServerTDateZKeep-Alive]Cache-ControlTEtagXIdentityZKeep-AliveVpublic_Mon, 07 Jan 2013 17:24:26 GMT_text/javascript; charset=utf-8_…Apache/2.4.6 (Red Hat Enterprise Linux) OpenSSL/1.0.1e-fips mod_auth_kerb/5.4 mod_fcgid/2.3.9 SVN/1.7.14 mod_wsgi/3.4 Python/2.7.5 mod_fastcgi/mod_fastcgi-SNAP-0910052141 mod_perl/2.0.9dev Perl/v5.16.3_Wed, 16 Dec 2015 16:02:58 GMT_timeout=5, max=100_public, max-age=3600_""ef6f1827233f26a6a85eabf0a4a92db5"“+,bc\NSDictionary¢b/_text/javascript“+,fg_NSHTTPURLResponse£hi/_NSHTTPURLResponse]NSURLResponse_NSKeyedArchiver—lm_WebResourceResponseÄ    # - 2 7 Z ` { ~ Ç Ö à ã è í ô ú ü ¢ • ® ™ ¨ Æ ∞ ≤ ≥ µ ∑ π ª Ω ø ¡ » – ‹ ﬁ ‡ ‚%*5>DGPY[]dlwÇÑÜàäåéêíîñ°£•ß©´≠Ø±≥µ∑À÷›Î¯ˇ"+6=]~Jjñª¿Õ–‚Á˚ˇ!36L             n              NOWØvar DOKU_BASE='/~c311/';var DOKU_TPL='/~c311/lib/tpl/doogiestpl/';var alertText='Please enter the text you want to format.\nIt will be appended to the end of the document.';var notSavedYet='Unsaved changes will be lost.\nReally continue?';var reallyDel='Really delete selected item(s)?';LANG={"keepopen":"Keep window open on selection","hidedetails":"Hide Details","nosmblinks":"Linking to Windows shares only works in Microsoft Internet Explorer.\nYou still can copy and paste the link.","mu_btn":"Upload multiple files at once","plugins":[]};function isUndefined(prop){return(typeof prop=='undefined');}function isFunction(prop){return(typeof prop=='function');}function isString(prop){return(typeof prop=='string');}function isNumber(prop){return(typeof prop=='number');}function isNumeric(prop){return isNumber(prop)&&!isNaN(prop)&&isFinite(prop);}function isArray(prop){return(prop instanceof Array);}function isRegExp(prop){return(prop instanceof RegExp);}function isBoolean(prop){return('boolean'==typeof prop);}function isScalar(prop){return isNumeric(prop)||isString(prop);}function isEmpty(prop){if(isBoolean(prop))return false;if(isRegExp(prop)&&new RegExp("").toString()==prop.toString())return true;if(isString(prop)||isNumber(prop))return!prop;if(Boolean(prop)&&false!=prop){for(var i in prop)if(prop.hasOwnProperty(i))return false}return true;}if('undefined'==typeof Object.hasOwnProperty){Object.prototype.hasOwnProperty=function(prop){return!('undefined'==typeof this[prop]||this.constructor&&this.constructor.prototype[prop]&&this[prop]===this.constructor.prototype[prop]);}}function hasFlash(version){var ver=0;try{if(navigator.plugins!=null&&navigator.plugins.length>0){ver=navigator.plugins["Shockwave Flash"].description.split(' ')[2].split('.')[0];}else{var axo=new ActiveXObject("ShockwaveFlash.ShockwaveFlash");ver=axo.GetVariable("$version").split(' ')[1].split(',')[0];}}catch(e){}if(ver>=version)return true;return false;}function addEvent(element,type,handler){if(!handler.$$guid)handler.$$guid=addEvent.guid++;if(!element.events)element.events={};var handlers=element.events[type];if(!handlers){handlers=element.events[type]={};if(element["on"+type]){handlers[0]=element["on"+type];}}handlers[handler.$$guid]=handler;element["on"+type]=handleEvent;};addEvent.guid=1;function removeEvent(element,type,handler){if(element.events&&element.events[type]){delete element.events[type][handler.$$guid];}};function handleEvent(event){var returnValue=true;event=event||fixEvent(window.event);var handlers=this.events[event.type];for(var i in handlers){if(!handlers.hasOwnProperty(i))continue;this.$$handleEvent=handlers[i];if(this.$$handleEvent(event)===false){returnValue=false;}}return returnValue;};function fixEvent(event){event.preventDefault=fixEvent.preventDefault;event.stopPropagation=fixEvent.stopPropagation;event.target=event.srcElement;return event;};fixEvent.preventDefault=function(){this.returnValue=false;};fixEvent.stopPropagation=function(){this.cancelBubble=true;};window.fireoninit=function(){if(arguments.callee.done)return;arguments.callee.done=true;if(_timer){clearInterval(_timer);_timer=null;}if(typeof window.oninit=='function'){window.oninit();}};if(document.addEventListener){document.addEventListener("DOMContentLoaded",window.fireoninit,null);}/*@cc_on @*//*@if(@_win32)document.write("<scr"+"ipt id=\"__ie_init\" defer=\"true\" src=\"//:\"><\/script>");var script=document.getElementById("__ie_init");script.onreadystatechange=function(){if(this.readyState=="complete"){window.fireoninit();}};/*@end @*/if(/WebKit/i.test(navigator.userAgent)){var _timer=setInterval(function(){if(/loaded|complete/.test(document.readyState)){window.fireoninit();}},10);}window.onload=window.fireoninit;window.oninit=function(){};function addInitEvent(func){var oldoninit=window.oninit;if(typeof window.oninit!='function'){window.oninit=func;}else{window.oninit=function(){oldoninit();func();};}}DokuCookie={data:Array(),name:'DOKU_PREFS',setValue:function(key,val){DokuCookie.init();DokuCookie.data[key]=val;var now=new Date();DokuCookie.fixDate(now);now.setTime(now.getTime()+365*24*60*60*1000);var text='';for(var key in DokuCookie.data){if(!DokuCookie.data.hasOwnProperty(key))continue;text+='#'+escape(key)+'#'+DokuCookie.data[key];}DokuCookie.setCookie(DokuCookie.name,text.substr(1),now,DOKU_BASE);},getValue:function(key){DokuCookie.init();return DokuCookie.data[key];},init:function(){if(DokuCookie.data.length)return;var text=DokuCookie.getCookie(DokuCookie.name);if(text){var parts=text.split('#');for(var i=0;i<parts.length;i+=2){DokuCookie.data[unescape(parts[i])]=unescape(parts[i+1]);}}},setCookie:function(name,value,expires,path,domain,secure){var curCookie=name+"="+escape(value)+((expires)?"; expires="+expires.toGMTString():"")+((path)?"; path="+path:"")+((domain)?"; domain="+domain:"")+((secure)?"; secure":"");document.cookie=curCookie;},getCookie:function(name){var dc=document.cookie;var prefix=name+"=";var begin=dc.indexOf("; "+prefix);if(begin==-1){begin=dc.indexOf(prefix);if(begin!==0){return null;}}else{begin+=2;}var end=document.cookie.indexOf(";",begin);if(end==-1){end=dc.length;}return unescape(dc.substring(begin+prefix.length,end));},fixDate:function(date){var base=new Date(0);var skew=base.getTime();if(skew>0){date.setTime(date.getTime()-skew);}}};var clientPC=navigator.userAgent.toLowerCase();var is_macos=navigator.appVersion.indexOf('Mac')!=-1;var is_gecko=((clientPC.indexOf('gecko')!=-1)&&(clientPC.indexOf('spoofer')==-1)&&(clientPC.indexOf('khtml')==-1)&&(clientPC.indexOf('netscape/7.0')==-1));var is_safari=((clientPC.indexOf('AppleWebKit')!=-1)&&(clientPC.indexOf('spoofer')==-1));var is_khtml=(navigator.vendor=='KDE'||(document.childNodes&&!document.all&&!navigator.taintEnabled));if(clientPC.indexOf('opera')!=-1){var is_opera=true;var is_opera_preseven=(window.opera&&!document.childNodes);var is_opera_seven=(window.opera&&document.childNodes);}var toolbar='';function $(){var elements=new Array();for(var i=0;i<arguments.length;i++){var element=arguments[i];if(typeof element=='string')element=document.getElementById(element);if(arguments.length==1)return element;elements.push(element);}return elements;}function isset(varname){return(typeof(window[varname])!='undefined');}function getElementsByClass(searchClass,node,tag){var classElements=new Array();if(node==null)node=document;if(tag==null)tag='*';var els=node.getElementsByTagName(tag);var elsLen=els.length;var pattern=new RegExp("(^|\\s)"+searchClass+"(\\s|$)");for(i=0,j=0;i<elsLen;i++){if(pattern.test(els[i].className)){classElements[j]=els[i];j++;}}return classElements;}function findPosX(object){var curleft=0;var obj=$(object);if(obj.offsetParent){while(obj.offsetParent){curleft+=obj.offsetLeft;obj=obj.offsetParent;}}else if(obj.x){curleft+=obj.x;}return curleft;}function findPosY(object){var curtop=0;var obj=$(object);if(obj.offsetParent){while(obj.offsetParent){curtop+=obj.offsetTop;obj=obj.offsetParent;}}else if(obj.y){curtop+=obj.y;}return curtop;}function jsEscape(text){var re=new RegExp("\\\\","g");text=text.replace(re,"\\\\");re=new RegExp("'","g");text=text.replace(re,"\\'");re=new RegExp('"',"g");text=text.replace(re,'&quot;');re=new RegExp("\\\\\\\\n","g");text=text.replace(re,"\\n");return text;}function escapeQuotes(text){var re=new RegExp("'","g");text=text.replace(re,"\\'");re=new RegExp('"',"g");text=text.replace(re,'&quot;');re=new RegExp("\\n","g");text=text.replace(re,"\\n");return text;}function prependChild(parent,element){if(!parent.firstChild){parent.appendChild(element);}else{parent.insertBefore(element,parent.firstChild);}}function showLoadBar(){document.write('<img src="'+DOKU_BASE+'lib/images/loading.gif" '+'width="150" height="12" alt="..." />');}function hideLoadBar(id){obj=$(id);if(obj)obj.style.display="none";}function addTocToggle(){if(!document.getElementById)return;var header=$('toc__header');if(!header)return;var obj=document.createElement('span');obj.id='toc__toggle';obj.innerHTML='<span>&minus;</span>';obj.className='toc_close';obj.style.cursor='pointer';prependChild(header,obj);obj.parentNode.onclick=toggleToc;try{obj.parentNode.style.cursor='pointer';obj.parentNode.style.cursor='hand';}catch(e){}}function toggleToc(){var toc=$('toc__inside');var obj=$('toc__toggle');if(toc.style.display=='none'){toc.style.display='';obj.innerHTML='<span>&minus;</span>';obj.className='toc_close';}else{toc.style.display='none';obj.innerHTML='<span>+</span>';obj.className='toc_open';}}function checkAclLevel(){if(document.getElementById){var scope=$('acl_scope').value;if((scope.indexOf(":*")>0)||(scope=="*")){document.getElementsByName('acl_checkbox[4]')[0].disabled=false;document.getElementsByName('acl_checkbox[8]')[0].disabled=false;}else{document.getElementsByName('acl_checkbox[4]')[0].checked=false;document.getElementsByName('acl_checkbox[8]')[0].checked=false;document.getElementsByName('acl_checkbox[4]')[0].disabled=true;document.getElementsByName('acl_checkbox[8]')[0].disabled=true;}}}function footnote(e){var obj=e.target;var id=obj.id.substr(5);var fndiv=$('insitu__fn');if(!fndiv){fndiv=document.createElement('div');fndiv.id='insitu__fn';fndiv.className='insitu-footnote JSpopup dokuwiki';addEvent(fndiv,'mouseout',function(e){if(e.target!=fndiv){e.stopPropagation();return;}if(e.pageX){var bx1=findPosX(fndiv);var bx2=bx1+fndiv.offsetWidth;var by1=findPosY(fndiv);var by2=by1+fndiv.offsetHeight;var x=e.pageX;var y=e.pageY;if(x>bx1&&x<bx2&&y>by1&&y<by2){e.stopPropagation();return;}}else{if(e.offsetX>0&&e.offsetX<fndiv.offsetWidth-1&&e.offsetY>0&&e.offsetY<fndiv.offsetHeight-1){e.stopPropagation();return;}}fndiv.style.display='none';});document.body.appendChild(fndiv);}var a=$("fn__"+id);if(!a){return;}var content=new String(a.parentNode.parentNode.innerHTML);content=content.replace(/<sup>.*<\/sup>/gi,'');content=content.replace(/^\s+(,\s+)+/,'');content=content.replace(/\bid=\"(.*?)\"/gi,'id="insitu__$1');fndiv.innerHTML=content;var x;var y;if(e.pageX){x=e.pageX;y=e.pageY;}else{x=e.offsetX;y=e.offsetY;}fndiv.style.position='absolute';fndiv.style.left=(x+2)+'px';fndiv.style.top=(y+2)+'px';fndiv.style.display='';}addInitEvent(function(){var elems=getElementsByClass('fn_top',null,'a');for(var i=0;i<elems.length;i++){addEvent(elems[i],'mouseover',function(e){footnote(e);});}});function initSizeCtl(ctlid,edid){if(!document.getElementById){return;}var ctl=$(ctlid);var textarea=$(edid);if(!ctl||!textarea)return;var hgt=DokuCookie.getValue('sizeCtl');if(hgt){textarea.style.height=hgt;}else{textarea.style.height='300px';}var wrp=DokuCookie.getValue('wrapCtl');if(wrp){setWrap(textarea,wrp);}var l=document.createElement('img');var s=document.createElement('img');var w=document.createElement('img');l.src=DOKU_BASE+'lib/images/larger.gif';s.src=DOKU_BASE+'lib/images/smaller.gif';w.src=DOKU_BASE+'lib/images/wrap.gif';addEvent(l,'click',function(){sizeCtl(edid,100);});addEvent(s,'click',function(){sizeCtl(edid,-100);});addEvent(w,'click',function(){toggleWrap(edid);});ctl.appendChild(l);ctl.appendChild(s);ctl.appendChild(w);}function sizeCtl(edid,val){var textarea=$(edid);var height=parseInt(textarea.style.height.substr(0,textarea.style.height.length-2));height+=val;textarea.style.height=height+'px';DokuCookie.setValue('sizeCtl',textarea.style.height);}function toggleWrap(edid){var textarea=$(edid);var wrap=textarea.getAttribute('wrap');if(wrap&&wrap.toLowerCase()=='off'){setWrap(textarea,'soft');}else{setWrap(textarea,'off');}DokuCookie.setValue('wrapCtl',textarea.getAttribute('wrap'));}function setWrap(textarea,wrapAttrValue){textarea.setAttribute('wrap',wrapAttrValue);var parNod=textarea.parentNode;var nxtSib=textarea.nextSibling;parNod.removeChild(textarea);parNod.insertBefore(textarea,nxtSib);}function closePopups(){if(!document.getElementById){return;}var divs=document.getElementsByTagName('div');for(var i=0;i<divs.length;i++){if(divs[i].className.indexOf('JSpopup')!=-1){divs[i].style.display='none';}}}function scrollToMarker(){var obj=$('scroll__here');if(obj)obj.scrollIntoView();}function focusMarker(){var obj=$('focus__this');if(obj)obj.focus();}function cleanMsgArea(){var elems=getElementsByClass('(success|info|error)',document,'div');if(elems){for(var i=0;i<elems.length;i++){elems[i].style.display='none';}}}addInitEvent(function(){var revForm=$('page__revisions');if(!revForm)return;var elems=revForm.elements;var countTicks=0;for(var i=0;i<elems.length;i++){var input1=elems[i];if(input1.type=='checkbox'){addEvent(input1,'click',function(e){if(this.checked)countTicks++;else countTicks--;for(var j=0;j<elems.length;j++){var input2=elems[j];if(countTicks>=2)input2.disabled=(input2.type=='checkbox'&&!input2.checked);else input2.disabled=(input2.type!='checkbox');}});}}});addInitEvent(function(){var selector=$('action__selector');if(!selector)return;addEvent(selector,'change',function(e){this.form.submit();});$('action__selectorbtn').style.display='none';});function checkWindowsShares(){var elems=getElementsByClass('windows',document,'a');if(elems){for(var i=0;i<elems.length;i++){var share=elems[i];addEvent(share,'click',function(){if(document.all==null){alert(LANG['nosmblinks']);}});}}}addInitEvent(function(){checkWindowsShares();});function sack(file){this.AjaxFailedAlert="Your browser does not support the enhanced functionality of this website, and therefore you will have an experience that differs from the intended one.\n";this.requestFile=file;this.method="POST";this.URLString="";this.encodeURIString=true;this.execute=false;this.onLoading=function(){};this.onLoaded=function(){};this.onInteractive=function(){};this.onCompletion=function(){};this.afterCompletion=function(){};this.createAJAX=function(){try{this.xmlhttp=new ActiveXObject("Msxml2.XMLHTTP");}catch(e){try{this.xmlhttp=new ActiveXObject("Microsoft.XMLHTTP");}catch(err){this.xmlhttp=null;}}if(!this.xmlhttp&&typeof XMLHttpRequest!="undefined"){this.xmlhttp=new XMLHttpRequest();}if(!this.xmlhttp){this.failed=true;}};this.setVar=function(name,value){if(this.URLString.length<3){this.URLString=name+"="+value;}else{this.URLString+="&"+name+"="+value;}};this.encVar=function(name,value){var varString=encodeURIComponent(name)+"="+encodeURIComponent(value);return varString;};this.encodeURLString=function(string){varArray=string.split('&');for(i=0;i<varArray.length;i++){urlVars=varArray[i].split('=');if(urlVars[0].indexOf('amp;')!=-1){urlVars[0]=urlVars[0].substring(4);}varArray[i]=this.encVar(urlVars[0],urlVars[1]);}return varArray.join('&');};this.runResponse=function(){eval(this.response);};this.runAJAX=function(urlstring){this.responseStatus=new Array(2);if(this.failed&&this.AjaxFailedAlert){alert(this.AjaxFailedAlert);}else{if(urlstring){if(this.URLString.length){this.URLString=this.URLString+"&"+urlstring;}else{this.URLString=urlstring;}}if(this.encodeURIString){var timeval=new Date().getTime();this.URLString=this.encodeURLString(this.URLString);this.setVar("rndval",timeval);}if(this.element){this.elementObj=document.getElementById(this.element);}if(this.xmlhttp){var self=this;if(this.method=="GET"){var totalurlstring=this.requestFile+"?"+this.URLString;this.xmlhttp.open(this.method,totalurlstring,true);}else{this.xmlhttp.open(this.method,this.requestFile,true);}if(this.method=="POST"){try{this.xmlhttp.setRequestHeader('Content-Type','application/x-www-form-urlencoded; charset=UTF-8');}catch(e){}}this.xmlhttp.onreadystatechange=function(){switch(self.xmlhttp.readyState){case 1:self.onLoading();break;case 2:self.onLoaded();break;case 3:self.onInteractive();break;case 4:self.response=self.xmlhttp.responseText;self.responseXML=self.xmlhttp.responseXML;self.responseStatus[0]=self.xmlhttp.status;self.responseStatus[1]=self.xmlhttp.statusText;self.onCompletion();if(self.execute){self.runResponse();}if(self.elementObj){var elemNodeName=self.elementObj.nodeName;elemNodeName.toLowerCase();if(elemNodeName=="input"||elemNodeName=="select"||elemNodeName=="option"||elemNodeName=="textarea"){self.elementObj.value=self.response;}else{self.elementObj.innerHTML=self.response;}}self.afterCompletion();self.URLString="";break;}};this.xmlhttp.send(this.URLString);}}};this.createAJAX();}function ajax_qsearch_class(){this.sack=null;this.inObj=null;this.outObj=null;this.timer=null;}var ajax_qsearch=new ajax_qsearch_class();ajax_qsearch.sack=new sack(DOKU_BASE+'lib/exe/ajax.php');ajax_qsearch.sack.AjaxFailedAlert='';ajax_qsearch.sack.encodeURIString=false;ajax_qsearch.init=function(inID,outID){ajax_qsearch.inObj=document.getElementById(inID);ajax_qsearch.outObj=document.getElementById(outID);if(ajax_qsearch.inObj===null){return;}if(ajax_qsearch.outObj===null){return;}addEvent(ajax_qsearch.inObj,'keyup',ajax_qsearch.call);addEvent(ajax_qsearch.outObj,'click',function(){ajax_qsearch.outObj.style.display='none';});};ajax_qsearch.clear=function(){ajax_qsearch.outObj.style.display='none';ajax_qsearch.outObj.innerHTML='';if(ajax_qsearch.timer!==null){window.clearTimeout(ajax_qsearch.timer);ajax_qsearch.timer=null;}};ajax_qsearch.exec=function(){ajax_qsearch.clear();var value=ajax_qsearch.inObj.value;if(value===''){return;}ajax_qsearch.sack.runAJAX('call=qsearch&q='+encodeURI(value));};ajax_qsearch.sack.onCompletion=function(){var data=ajax_qsearch.sack.response;if(data===''){return;}ajax_qsearch.outObj.innerHTML=data;ajax_qsearch.outObj.style.display='block';};ajax_qsearch.call=function(){ajax_qsearch.clear();ajax_qsearch.timer=window.setTimeout("ajax_qsearch.exec()",500);};index={throbber_delay:500,treeattach:function(obj){if(!obj)return;var items=getElementsByClass('idx_dir',obj,'a');for(var i=0;i<items.length;i++){var elem=items[i];addEvent(elem,'click',function(e){return index.toggle(e,this);});var listitem=elem.parentNode;while(listitem.tagName!='LI'){listitem=listitem.parentNode;}if(listitem.getElementsByTagName('ul').length){listitem.open=true;}}},toggle:function(e,clicky){var listitem=clicky.parentNode.parentNode;listitem.open=!listitem.open;var sublists=listitem.getElementsByTagName('ul');if(!listitem.open){if(sublists.length){sublists[0].style.display='none';}listitem.className='closed';e.preventDefault();return false;}if(sublists.length&&listitem.open){sublists[0].style.display='';listitem.className='open';e.preventDefault();return false;}var ajax=new sack(DOKU_BASE+'lib/exe/ajax.php');ajax.AjaxFailedAlert='';ajax.encodeURIString=false;if(ajax.failed)return true;var ul=document.createElement('ul');ul.className='idx';timeout=window.setTimeout(function(){if(listitem.open){ul.innerHTML='<li><img src="'+DOKU_BASE+'lib/images/throbber.gif" alt="loading..." title="loading..." /></li>';listitem.appendChild(ul);listitem.className='open';}},this.throbber_delay);ajax.elementObj=ul;ajax.afterCompletion=function(){window.clearTimeout(timeout);index.treeattach(ul);if(listitem.className!='open'){if(!listitem.open){ul.style.display='none';}listitem.appendChild(ul);if(listitem.open){listitem.className='open';}}};ajax.runAJAX(clicky.search.substr(1)+'&call=index');e.preventDefault();return false;}};addInitEvent(function(){index.treeattach($('index__tree'));});addInitEvent(function(){ajax_qsearch.init('qsearch__in','qsearch__out');});addInitEvent(function(){addEvent(document,'click',closePopups);});addInitEvent(function(){addTocToggle();});acl={init:function(){this.ctl=$('acl_manager');if(!this.ctl)return;var sel=$('acl__user').getElementsByTagName('select')[0];addEvent(sel,'change',acl.userselhandler);addEvent($('acl__tree'),'click',acl.treehandler);addEvent($('acl__user').getElementsByTagName('input')[1],'click',acl.loadinfo);},userselhandler:function(e){if(this.value=='__g__'||this.value=='__u__'){$('acl__user').getElementsByTagName('input')[0].style.display='';$('acl__user').getElementsByTagName('input')[1].style.display='';}else{$('acl__user').getElementsByTagName('input')[0].style.display='none';$('acl__user').getElementsByTagName('input')[1].style.display='none';}acl.loadinfo();},loadinfo:function(){var frm=$('acl__detail').getElementsByTagName('form')[0];var ajax=new sack(DOKU_BASE+'lib/plugins/acl/ajax.php');ajax.AjaxFailedAlert='';ajax.encodeURIString=false;if(ajax.failed)return true;var data=Array();data[0]=ajax.encVar('ns',frm.elements['ns'].value);data[1]=ajax.encVar('id',frm.elements['id'].value);data[2]=ajax.encVar('acl_t',frm.elements['acl_t'].value);data[3]=ajax.encVar('acl_w',frm.elements['acl_w'].value);data[4]=ajax.encVar('ajax','info');ajax.elementObj=$('acl__info');ajax.runAJAX(data.join('&'));return false;},parseatt:function(str){if(str[0]=='?')str=str.substr(1);var attributes={};var all=str.split('&');for(var i=0;i<all.length;i++){var att=all[i].split('=');attributes[att[0]]=decodeURIComponent(att[1]);}return attributes;},hsc:function(str){str=str.replace(/&/g,"&amp;");str=str.replace(/\"/g,"&quot;");str=str.replace(/\'/g,"&#039;");str=str.replace(/</g,"&lt;");str=str.replace(/>/g,"&gt;");return str;},treetoggle:function(clicky){var listitem=clicky.parentNode.parentNode;var sublists=listitem.getElementsByTagName('ul');if(sublists.length){listitem.removeChild(sublists[0]);clicky.src=DOKU_BASE+'lib/images/plus.gif';clicky.alt='+';return false;}var link=listitem.getElementsByTagName('a')[0];var ajax=new sack(DOKU_BASE+'lib/plugins/acl/ajax.php');ajax.AjaxFailedAlert='';ajax.encodeURIString=false;if(ajax.failed)return true;var ul=document.createElement('ul');listitem.appendChild(ul);ajax.elementObj=ul;ajax.runAJAX(link.search.substr(1)+'&ajax=tree');clicky.src=DOKU_BASE+'lib/images/minus.gif';return false;},treehandler:function(e){if(e.target.src){acl.treetoggle(e.target);}else if(e.target.href){var obj=getElementsByClass('cur',$('acl__tree'),'a');for(var i=0;i<obj.length;i++){obj[i].className=obj[i].className.replace(/ cur/,'');}e.target.className+=' cur';var frm=$('acl__detail').getElementsByTagName('form')[0];if(e.target.className.search(/wikilink1/)>-1){frm.elements['ns'].value='';frm.elements['id'].value=acl.hsc(acl.parseatt(e.target.search)['id']);}else if(e.target.className.search(/idx_dir/)>-1){frm.elements['ns'].value=acl.hsc(acl.parseatt(e.target.search)['ns']);frm.elements['id'].value='';}acl.loadinfo();}e.stopPropagation();e.preventDefault();return false;}};addInitEvent(acl.init);function usrmgr_delconfirm(){if($('usrmgr__del')){addEvent($('usrmgr__del'),'click',function(){return confirm(reallyDel);});}};addInitEvent(usrmgr_delconfirm);addInitEvent(function(){scrollToMarker();});addInitEvent(function(){focusMarker();});
_text/javascript‘$%&'_Qhttps://cgi.soic.indiana.edu/~c311/lib/exe/indexer.php?id=assignment-3&1450283709Ojbplist00‘efX$versionX$objectsY$archiverT$top Ü†Ø#)*0123KLMNOPQRSTUVWXYZ[\]`U$null›	
 !"R$6S$10R$2R$7R$3S$11R$8V$classR$4R$9R$0R$5R$1Ä	ÄÄÄ ÄÄÄÄ”$%'(WNS.base[NS.relativeÄ ÄÄ_Qhttps://cgi.soic.indiana.edu/~c311/lib/exe/indexer.php?id=assignment-3&1450283709“+,-.Z$classnameX$classesUNSURL¢-/XNSObject#Aº#^≠*È »”456@JWNS.keysZNS.objects©789:;<=>?Ä	Ä
ÄÄÄÄÄÄÄ©ACDEFGHIÄÄÄÄÄÄÄÄÄÄVPragma\Content-TypeZSet-CookieVServer]Cache-ControlTDate^Content-LengthWExpiresZConnectionXno-cacheYimage/gif_qDW458e74b55f93875264846c31aad29080=deleted; expires=Thu, 01-Jan-1970 00:00:01 GMT; path=/~c311/; secure; httponly_…Apache/2.4.6 (Red Hat Enterprise Linux) OpenSSL/1.0.1e-fips mod_auth_kerb/5.4 mod_fcgid/2.3.9 SVN/1.7.14 mod_wsgi/3.4 Python/2.7.5 mod_fastcgi/mod_fastcgi-SNAP-0910052141 mod_perl/2.0.9dev Perl/v5.16.3_>no-store, no-cache, must-revalidate, post-check=0, pre-check=0_Wed, 16 Dec 2015 16:35:10 GMTR42_Thu, 19 Nov 1981 08:52:00 GMTUClose“+,^_\NSDictionary¢^/“+,ab_NSHTTPURLResponse£cd/_NSHTTPURLResponse]NSURLResponse_NSKeyedArchiver—gh_WebResourceResponseÄ    # - 2 7 W ] x {  Ç Ö à å è ñ ô ú ü ¢ • ß © ´ ≠ Ø ∞ ≤ ¥ ∂ ∏ ∫ º æ ≈ Õ Ÿ € › ﬂ38CLRU^gikrzÖèëìïóôõùü°´≠Ø±≥µ∑πªΩø∆”ﬁÂÛ¯#-°mÆŒ—Ò˜¸	%)=K]`v             i              xO*GIF89a  Ä     ˇˇˇ!˘   ,       L ;Yimage/gif            1   <   S   b   t   ä   ®   ©   Á  ·Æ  ·∏  ·æ  ·ƒ  ·œ  ·Â  ‚-  Áo  Ù¯  ı  ı  ı  ıT  ˙ê eÕ eÿ f" kf ÇÒ Ç¸ É? àç ‡@ ‡R ‡[ ‡Ø Ê ÊJ             (             ÊT